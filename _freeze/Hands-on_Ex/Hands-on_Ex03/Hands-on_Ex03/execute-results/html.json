{
  "hash": "bc42fea4831959d873701997cfbf35f5",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 3 -  Programming Interactive Data Visualisation with R\"\nauthor: \"Alicia Loh\"\ndate: \"April 20, 2024\"\ndate-modified: last-modified\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\nLearning Objectives:\n\n-   Control the placement of annotation on a graph by using functions provided in ggrepel package,\n\n-   Create professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\n\n-   Plot composite figure by combining ggplot2 graphs by using patchwork package.\n\n# Getting Started\n\n## Installing and loading the required libraries\n\nBesides tidyverse, the following R packages will be used.\n\n-   ggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\n\n-   ggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\n\n-   hrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\n\n-   patchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n```\n:::\n\n\n## Importing the Data\n\n-   The code chunk below imports *exam_data.csv* into R environment by using [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package.\n\n-   **readr** is a pacakge within tidyverse.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n**exam_data** tibble data frame contains:\n\n-   Year end examination grades of a cohort of primary 3 students from a local school.\n\n-   There are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\n    -   The categorical attributes are: ID, CLASS, GENDER and RACE.\n\n    -   The continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n# **Beyond ggplot2 Annotation: ggrepel**\n\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n:::\n\n:::\n\n## **Working with ggrepel**\n\n[**ggrepel**](https://ggrepel.slowkow.com/) is an extension of **ggplot2** package which provides `geoms` for **ggplot2** to repel overlapping text seen below. Simply replace `geom_text()` by [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and `geom_label()` by [`geom_label_repel`](https://ggrepel.slowkow.com/reference/geom_text_repel.html).\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n:::\n\n:::\n\n::: callout-note\nBenefits of ggplot2 over in-built R graphics\n\n-   Automated Legends: Unlike built-in plotting which requires manual legend creation, ggplot2 automatically generates legends based on the data's aesthetics. This streamlines the process, especially for beginners who may find managing legends challenging.\n\n-   Simplified Faceting: ggplot2 simplifies the creation of faceted plots (multiple subplots) compared to base R plotting. The latter can be quite complex, requiring setup with par() and potentially confusing for loops, which might be overwhelming for beginners.\n\n-   Tidy Data Integration: ggplot2 encourages the use of 'tidy data' principles, aligning with how other R tools and packages handle data. This practice helps beginners learn a consistent and widely-adopted approach to data analysis in R.\n:::\n\n# **Beyond ggplot2 [Themes](https://ggplot2.tidyverse.org/reference/#themes)**\n\nggplot2 has eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html):\n\n-   `theme_gray()`\n\n-   `theme_bw()`\n\n-   `theme_classic()`\n\n-   `theme_dark()`\n\n-   `theme_light()`\n\n-   `theme_linedraw()`\n\n-   `theme_minimal()`\n\n-   `theme_void()`\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n```\n:::\n\n:::\n\n## **Working with ggtheme package**\n\n[**ggthemes**](https://cran.r-project.org/web/packages/ggthemes/) provides [‘ggplot2’ themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots made by:\n\n-   [Fivethirtyeight](https://fivethirtyeight.com/)\n\n-   [The Economist](https://www.economist.com/graphic-detail)\n\n-   [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/)\n\n-   among others\n\n[*The Economist* theme](https://jrnold.github.io/ggthemes/reference/theme_economist.html) is used below.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n```\n:::\n\n:::\n\n## **Working with hrbthems package**\n\n[**hrbrthemes**](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n```\n:::\n\n:::\n\n::: callout-note\nThe second goal centers around productivity for a production workflow, which is the context for where the elements of hrbrthemes should be used.\n:::\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n```\n:::\n\n:::\n\n::: callout-note\n-   `axis_title_size` argument is used to increase the font size of the axis title to 18,\n\n-   `base_size` argument is used to increase the default axis label to 15\n\n-   `grid` argument is used to remove the x-axis grid lines\n:::\n\n# **Beyond Single Graph**\n\nMultiple graphs are sometimes required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. In this section, a composite plot will be created by combining multiple graphs.\n\nThree statistical graphics are first created via the code chunk below.\n\n## Plot 1: Distribution of Math Scores (Histogram)\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np1\n```\n:::\n\n:::\n\n## Plot 2: Distribution of English Scores (Histogram)\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2\n```\n:::\n\n:::\n\n## Plot 3: English vs Maths score (Scatterplot)\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English vs Maths scores for Primary 3\")\n\np3\n```\n:::\n\n:::\n\n## **Creating Composite Graphics: pathwork methods**\n\nggplot2 extension’s functions support composite figures by combining several graphs e.g., [`grid.arrange()`](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html) of **gridExtra** package and [`plot_grid()`](https://wilkelab.org/cowplot/reference/plot_grid.html) of [**cowplot**](https://wilkelab.org/cowplot/) package.\n\nThis section uses a ggplot2 extension called [**patchwork**](https://patchwork.data-imaginist.com/)**,** specially designed for combining separate ggplot2 graphs into a single figure.\n\nPatchwork package has a very simple syntax to create layouts. General syntax:\n\n-   Plus Sign \"+\" - Two-Column Layout\n\n-   Parenthesis \"( )\" - Create a subplot group.\n\n-   Division Sign \"/\" - Two-Row Layout\n\n## **Combining two ggplot2 graphs**\n\nFigure in the tabset below shows a composite of two histograms (p1 & p2 from above) created using patchwork.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2\n```\n:::\n\n:::\n\n::: callout-note\nNote the syntax simplicity. i.e. `p1 + p2`\n:::\n\n## **Combining three ggplot2 graphs**\n\nMore complex composites can be achieved by using appropriate operators. For example, the composite figure below uses:\n\n-   “/” - stack two ggplot2 graphs on top of another\n\n-   “\\|” - place the plots adjacent to each other\n\n-   “( )” - define plot sequence\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(p1 / p2) | p3\n```\n:::\n\n:::\n\n::: callout-note\nRefer to [Plot Assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html). for more modification and layout controls\n:::\n\n## **Creating a composite figure with tag**\n\n**patchwork** also provides auto-tagging capabilities to identify subplots in text, as shown in the figure below.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n```\n:::\n\n:::\n\n::: callout-note\nNote the I, II, III labels in the subplots have been automatically labelled.\n:::\n\n## **Creating figure with insert**\n\n [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html) of **patchwork**, allows the placement of one or several plots or graphic elements freely on top or below another plot.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n```\n:::\n\n:::\n\n## **Creating a composite figure by using patchwork and ggtheme**\n\n**patchwork** and *theme_economist()* of **ggthemes** package are used to create the figure below\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()\n```\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}