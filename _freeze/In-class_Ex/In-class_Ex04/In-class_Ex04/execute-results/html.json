{
  "hash": "0588bfa95cd2d3f33f500faf19f532b5",
  "result": {
    "markdown": "---\ntitle: \"In-Class Exercise 4 -  \"\nauthor: \"Alicia Loh\"\ndate: \"May 04, 2024\"\ndate-modified: last-modified\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\nLearning Objectives:\n\n-   Create visual graphics with rich statistical information using ggstatsplot package\n-   Use performance package to visualise model diagnostics\n-   Use parameters package to visualise model parameters\n\n# Getting Started\n\n[**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/) is an extension of [**ggplot2**](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\n-   To provide alternative statistical inference methods by default\n\n-   To follow besst practices for statistical reporting\n\n-   For all statistical tests resulted in the plots, the default template abides by the [APA gold standard](https://my.ilstu.edu/~jhkahn/apastats.html) for statistical reporting\n\n## Installing and loading the required libraries\n\nThe following R packages will be used:\n\n-   [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/)is an extension of ggplot2 package for creating graphics with details from statstical tests included in the plots themselces\n\n-   [**tidyverse**](https://www.tidyverse.org/), a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggstatsplot, tidyverse)\n```\n:::\n\n\n## Importing the Data\n\n-   The code chunk below imports *exam_data.csv* into R environment by using [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package.\n\n-   **readr** is a pacakge within tidyverse.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n**exam_data** tibble data frame contains:\n\n-   Year end examination grades of a cohort of primary 3 students from a local school.\n\n-   There are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\n    -   The categorical attributes are: ID, CLASS, GENDER and RACE.\n\n    -   The continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n## **One-sample test: *gghistostats()* method**\n\nIn the code chunk below, [*gghistostats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/gghistostats.html) is used to to build an visual of one-sample test on English scores.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234) # for reproducibility\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234) # for reproducibility\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n```\n:::\n\n:::\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n## **Unpacking the Bayes Factor**\n\n-   A Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. i.e., a measure of the strength of evidence in favor of one theory among two competing theories.\n\n-   Bayes factor allows evaluation of the data in favor of a null hypothesis, and to use external information to do so. It gives the weight of the evidence in favor of a given hypothesis.\n\n-   When comparing two hypotheses, H~1~ (the alternate hypothesis) and H~0~ (the null hypothesis), the Bayes Factor is often written as B~10~, defined mathematically as:\n\n    $\\frac{likelihood of data given H_{1}}{likelihood of data given H_{0}} = \\frac{P(D|H_{1})}{P(D|H_{0})}$\n\n-   The [**Schwarz criterion**](https://www.statisticshowto.com/bayesian-information-criterion/) is one of the easiest ways to calculate rough approximation of the Bayes Factor.\n\n### **Interpreting Bayes Factor**\n\nA **Bayes Factor** can be any positive number. A common interpretation was first proposed by Harold Jeffereys (1961) and slightly modified by [Lee and Wagenmakers](https://www-tandfonline-com.libproxy.smu.edu.sg/doi/pdf/10.1080/00031305.1999.10474443?needAccess=true) in 2013:\n\n| B10 Value  |          Conclusion           |\n|:----------:|:-----------------------------:|\n|   \\>100    |   Extreme evidence for H~1~   |\n|   30-100   | Very strong evidence for H~1~ |\n|   10-30    |   Strong evidence for H~1~    |\n|    3-10    |  Moderate evidence for H~1~   |\n|    1-3     |  Anecdotal evidence for H~1~  |\n|     1      |          No evidence          |\n|   1/3-1    |  Anecdotal evidence for H~1~  |\n|  1/3-1/10  |  Moderate evidence for H~1~   |\n| 1/10-1/30  |   Strong evidence for H~1~    |\n| 1/30-1/100 | Very strong evidence for H~1~ |\n|  \\<1/100   |   Extreme evidence for H~1~   |\n\n## **Two-sample mean test: *ggbetweenstats()***\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for two-sample mean test of Maths scores by gender.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n```\n:::\n\n:::\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n## **Oneway ANOVA Test: *ggbetweenstats()* method**\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for One-way ANOVA test on English score by race.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n```\n:::\n\n:::\n\n-   “ns” → only non-significant\n\n-   “s” → only significant\n\n-   “all” → everything\n\n### ggbetweenstats - Summary of tests\n\n## **Significant Test of Correlation: *ggscatterstats()***\n\nIn the code chunk below, [*ggscatterstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html) is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )                \n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n```\n:::\n\n:::\n\n## **Significant Test of Association (Depedence) : *ggbarstats()* methods**\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using [*cut()*](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut). [*ggbarstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbarstats.html) is used to build a visual for Significant Test of Association\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)                                    \n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)                                  \n```\n:::\n\n:::\n\n## **Visualising Models**\n\nVisualise model diagnostic and model parameters by using parameters package.\n\n-   Toyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n\n## **Installing and loading the required libraries**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(readxl, performance, parameters, see)\n```\n:::\n\n\n### **Importing Excel file: readxl methods**\n\nIn the code chunk below, [*read_xls()*](https://readxl.tidyverse.org/reference/read_excel.html) of [**readxl**](https://readxl.tidyverse.org/) package is used to import the data worksheet of `ToyotaCorolla.xls` workbook into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n```\n:::\n\n\n## **Multiple Regression Model using lm()**\n\nThe code chunk below is used to calibrate a multiple linear regression model by using *lm()* of Base Stats of R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n```\n:::\n\n\n## **Model Diagnostic: checking for multicolinearity:**\n\nIn the code chunk, [*check_collinearity()*](https://easystats.github.io/performance/reference/check_collinearity.html) of [**performance**](https://easystats.github.io/performance/) package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_collinearity(model)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c <- check_collinearity(model)\nplot(check_c)\n```\n:::\n\n\n## **Model Diagnostic: checking normality assumption**\n\nIn the code chunk, [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [**performance**](https://easystats.github.io/performance/) package.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n```\n:::\n\n:::\n\n## **Model Diagnostic: Check model for homogeneity of variances**\n\nIn the code chunk, [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [**performance**](https://easystats.github.io/performance/) package.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_h <- check_heteroscedasticity(model1)\nplot(check_h)\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_h <- check_heteroscedasticity(model1)\nplot(check_h)\n```\n:::\n\n:::\n\n## **Model Diagnostic: Complete check**\n\nWe can also perform the complete by using [*check_model()*](https://easystats.github.io/performance/reference/check_model.html).\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model1)\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model1)\n```\n:::\n\n:::\n\n## **Visualising Regression Parameters: see methods**\n\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(parameters(model1))\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(parameters(model1))\n```\n:::\n\n:::\n\n## **Visualising Regression Parameters: *ggcoefstats()* methods**\n\nIn the code below, [*ggcoefstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggcoefstats.html) of ggstatsplot package to visualise the parameters of a regression model.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoefstats(model1, \n            output = \"plot\")\n```\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoefstats(model1, \n            output = \"plot\")\n```\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}