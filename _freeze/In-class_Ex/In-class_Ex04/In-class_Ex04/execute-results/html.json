{
  "hash": "92c18e54b1f51b58e7bf86897cd81718",
  "result": {
    "markdown": "---\ntitle: \"In-Class Exercise 4 - Fundamentals of Visual Analytics\"\nauthor: \"Alicia Loh\"\ndate: \"May 04, 2024\"\ndate-modified: last-modified\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\nLearning Objectives:\n\n-   Create visual graphics with rich statistical information using ggstatsplot package\n-   Use performance package to visualise model diagnostics\n-   Use parameters package to visualise model parameters\n\n# Getting Started\n\n[**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/) is an extension of [**ggplot2**](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\n-   To provide alternative statistical inference methods by default\n\n-   To follow besst practices for statistical reporting\n\n-   For all statistical tests resulted in the plots, the default template abides by the [APA gold standard](https://my.ilstu.edu/~jhkahn/apastats.html) for statistical reporting\n\n## Installing and loading the required libraries\n\nThe following R packages will be used:\n\n-   [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/)is an extension of ggplot2 package for creating graphics with details from statstical tests included in the plots themselces\n\n-   [**tidyverse**](https://www.tidyverse.org/), a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggstatsplot, tidyverse)\n```\n:::\n\n\n## Importing the Data\n\n-   The code chunk below imports *exam_data.csv* into R environment by using [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package.\n\n-   **readr** is a pacakge within tidyverse.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n**exam_data** tibble data frame contains:\n\n-   Year end examination grades of a cohort of primary 3 students from a local school.\n\n-   There are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\n    -   The categorical attributes are: ID, CLASS, GENDER and RACE.\n\n    -   The continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n## **One-sample test: *gghistostats()* method**\n\nIn the code chunk below, [*gghistostats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/gghistostats.html) is used to to build an visual of one-sample test on English scores.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234) # for reproducibility\n\np <- gghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"parametric\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"skyblue\",\n                  alpha = 0.7),\n  normal.curve = FALSE, #default value is FALSE\n  normal.curve.args = list(linewidth = .5),\n  xlab = \"English Scores\"\n)\n\np\n```\n:::\n\n:::\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n### **Extracting expressions and data frames with statistical details**\n\n[ggstatsplot](https://indrajeetpatil.github.io/ggstatsplot/) also offers a convenience function to extract data frames with statistical details that are used to create expressions displayed in [ggstatsplot](https://indrajeetpatil.github.io/ggstatsplot/) plots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextract_stats(p)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$subtitle_data\n# A tibble: 1 × 15\n     mu statistic df.error  p.value method            alternative effectsize\n  <dbl>     <dbl>    <dbl>    <dbl> <chr>             <chr>       <chr>     \n1    60      8.77      321 1.04e-16 One Sample t-test two.sided   Hedges' g \n  estimate conf.level conf.low conf.high conf.method conf.distribution n.obs\n     <dbl>      <dbl>    <dbl>     <dbl> <chr>       <chr>             <int>\n1    0.488       0.95    0.372     0.603 ncp         t                   322\n  expression\n  <list>    \n1 <language>\n\n$caption_data\n# A tibble: 1 × 16\n  term       effectsize      estimate conf.level conf.low conf.high    pd\n  <chr>      <chr>              <dbl>      <dbl>    <dbl>     <dbl> <dbl>\n1 Difference Bayesian t-test     7.16       0.95     5.54      8.75     1\n  prior.distribution prior.location prior.scale    bf10 method         \n  <chr>                       <dbl>       <dbl>   <dbl> <chr>          \n1 cauchy                          0       0.707 4.54e13 Bayesian t-test\n  conf.method log_e_bf10 n.obs expression\n  <chr>            <dbl> <int> <list>    \n1 ETI               31.4   322 <language>\n\n$pairwise_comparisons_data\nNULL\n\n$descriptive_data\nNULL\n\n$one_sample_data\nNULL\n\n$tidy_data\nNULL\n\n$glance_data\nNULL\n```\n:::\n:::\n\n\n## ***ggdotplotstats()***\n\nIn the code chunk below, the function `ggdotplotstats` is used to provide an easy way to make **publication-ready dot plots/charts** with appropriate and selected statistical details embedded in the plot itself.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdotplotstats(\n  data = exam,\n  x = ENGLISH, \n  y = CLASS,\n  title = \"p\",\n  xlab = \"FALSE\"\n)\n```\n:::\n\n:::\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n## ***ggwithinstats()***\n\nTransform data into suitable format for plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_long <- exam %>%\n  pivot_longer(\n    cols = ENGLISH:SCIENCE,\n    names_to = \"SUBJECT\",\n    values_to = \"SCORES\"\n  ) %>%\n  filter(CLASS == \"3A\")\n```\n:::\n\n\nIn the code chunk below, the function `ggwithinstats` is designed to facilitate **data exploration**, and for making highly customizable **publication-ready plots**, with relevant statistical details included in the plot itself if desired.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggwithinstats(\n  data = filter(exam_long,\n                SUBJECT %in%\n                  c(\"MATHS\", \"SCIENCE\")),\n  x = SUBJECT, \n  y = SCORES,\n  type = \"p\"\n)\n```\n:::\n\n:::\n\n## **Significant Test of Correlation: *ggscatterstats()***\n\nIn the code chunk below, [*ggscatterstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html) is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  label.var = ID, # show student ID \n  label.expression = ENGLISH > 90 & MATHS > 90 #criteria\n  )   \n```\n:::\n\n:::\n\n## **Visualising Models**\n\nVisualise model diagnostic and model parameters by using parameters package.\n\n-   Toyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n\n## **Installing and loading the required libraries**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(readxl, performance, parameters, see)\n```\n:::\n\n\n### **Importing Excel file: readxl methods**\n\nIn the code chunk below, [*read_xls()*](https://readxl.tidyverse.org/reference/read_excel.html) of [**readxl**](https://readxl.tidyverse.org/) package is used to import the data worksheet of `ToyotaCorolla.xls` workbook into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …\n```\n:::\n:::\n\n\n## **Multiple Regression Model using lm()**\n\nThe code chunk below is used to calibrate a multiple linear regression model by using *lm()* of Base Stats of R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale) # list square model\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n```\n:::\n:::\n\n\n## **Model Diagnostic: checking for multicolinearity:**\n\nIn the code chunk, [*check_collinearity()*](https://easystats.github.io/performance/reference/check_collinearity.html) of [**performance**](https://easystats.github.io/performance/) package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_collinearity(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c <- check_collinearity(model)\nplot(check_c)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## **Model Diagnostic: checking normality assumption**\n\nIn the code chunk, [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [**performance**](https://easystats.github.io/performance/) package.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n```\n:::\n\n:::\n\n## **Model Diagnostic: Check model for homogeneity of variances**\n\nIn the code chunk, [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [**performance**](https://easystats.github.io/performance/) package.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_h <- check_heteroscedasticity(model1)\nplot(check_h)\n```\n:::\n\n:::\n\n## **Model Diagnostic: Complete check**\n\nWe can also perform the complete by using [*check_model()*](https://easystats.github.io/performance/reference/check_model.html).\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model1)\n```\n:::\n\n:::\n\n## **Visualising Regression Parameters: see methods**\n\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(parameters(model1))\n```\n:::\n\n:::\n\n## **Visualising Regression Parameters: *ggcoefstats()* methods**\n\nIn the code below, [*ggcoefstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggcoefstats.html) of ggstatsplot package to visualise the parameters of a regression model.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoefstats(model1, \n            output = \"plot\")\n```\n:::\n\n:::\n",
    "supporting": [
      "In-class_Ex04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}