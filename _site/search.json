[
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "",
    "text": "Select one data visualisation from the Take-home Exercise 1 submission prepared by a peer,\nCritic the submission in terms of clarity and aesthetics,\nPrepare a sketch for the alternative design by using the data visualisation design principles and best practices you had learned in Lesson 1 and 2.\nRemake the original design by using ggplot2, ggplot2 extensions and tidyverse packages."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualisation",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualisation",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Visualisation",
    "text": "Visualisation\nIn “Visualization 1 - How has transacted price varied over the 2024 Q1 and 2023”, the following plot is presented:\n\n\nAesthetics\n\n\n\n\n\n\n\nPros\nCons\n\n\n\n\n\nThe presented charts are relatively well spaced, so while there is a lot of information, chart elements are not overlaid on top of each other and obscured.\nColour theme of the plot is consistently applied, making reference between presented charts quick and easy\n\n\nAt first glance, one could mistakenly assume that the 3 general colour groups i.e. blue, green, orange were meant to be a grouping, where:\n\nGroup 1: Apartment, Condominium\nGroup 2: Detached House, Semi-detached House, Terrace House\nGroup 3: Executive Condominium\n\nIn addition, the light colours chosen, when presented with a light background in the raincloud plot, does not have good contrast.\nNot immediately obvious what the different shades of gray used for the line-bar chart represents, especially for bar charts where the bars have similar Y values\nIn-consistent Y axis labels for bar-line chart\n\nAbbreviations such as “EC”, “Apt”, “Condo” is not used anywhere else in the plot\nLeft Y axis has “Median Price” labeled for the second and fifth plot only, which could cause confusion as to why the rest of the plots are not labeled\n\n\n\n\n\n\n\nClarity\n\n\n\n\n\n\n\nPros\nCons\n\n\n\n\n\nGenerally, the volume of the bars in the stacked bar chart and line-bar chart correspond to their relative values, useful for quick comparison\n\n\nIt is not clear on first glance what the red dotted line separates:\n\nTimeline? In the bar-line chart and stacked bar chart, it appears to be separating timeline of interest, but it is unclear whether the right or left side is the timeline of interest.\nMean/Median? In the raincloud plot, there is no timeline per se, so it seems to denote the mean or median transacted price\n\nIn-consistent Y axis for bar-line chart\n\nRight Y-axis, includes both numbers and scientific notation, making it challenging to interpret. Specifically, the lack of clear spacing between the digits in the numerical format makes it difficult to read, while the scientific notation may not be readily understandable to individuals unfamiliar with it."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#aesthetics-1",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#aesthetics-1",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Aesthetics",
    "text": "Aesthetics\n\n\n\n\n\n\n\nIdentified Areas for Improvement\nProposed Solutions\n\n\n\n\n\nAt first glance, one could mistakenly assume that the 3 general colour groups i.e. blue, green, orange were meant to be a grouping, where:\n\nGroup 1: Apartment, Condominium\nGroup 2: Detached House, Semi-detached House, Terrace House\nGroup 3: Executive Condominium\n\nIn addition, the light colours chosen, when presented with a light background in the raincloud plot, does not have good contrast.\nNot immediately obvious what the different shades of gray used for the line-bar chart represents, especially for bar charts where the bars have similar Y values\nIn-consistent Y axis labels for bar-line chart\n\nAbbreviations such as “EC”, “Apt”, “Condo” is not used anywhere else in the plot\nLeft Y axis has “Median Price” labeled for the second and fifth plot only, which could cause confusion as to why the rest of the plots are not labeled\n\n\n\nColours simplified to various shades of blue to prevent any distraction. Colours chosen work with both light and dark backgrounds with good contrast. In addition, the colours are different enough from each other to be easily differentiated from each other in the plots\nInstead of colouring the background for the bar-line chart, the bars themselves were coloured with the corresponding colour for easy identification\nGray shading of the bars are removed, since it is generally obvious which bar is longer than the other\nIndividual Y axis labels for type of property is removed for simplicity. The same colour scheme is applied throughout the composite plot, so further labelling is not necessary\nThe composite plot showing six bar-line charts have one Y axis on each side, serving as an overall Y axis title"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#clarity-1",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#clarity-1",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Clarity",
    "text": "Clarity\n\n\n\n\n\n\n\nIdentified Areas for Improvement\nProposed Solutions\n\n\n\n\n\nIt is not clear on first glance what the red dotted line separates:\n\nTimeline? In the bar-line chart and stacked bar chart, it appears to be separating timeline of interest, but it is unclear whether the right or left side is the timeline of interest.\nMean/Median? In the raincloud plot, there is no timeline per se, so it seems to denote the mean or median transacted price\n\nIn-consistent Y axis for bar-line chart\n\nRight Y-axis, includes both numbers and scientific notation, making it challenging to interpret. Specifically, the lack of clear spacing between the digits in the numerical format makes it difficult to read, while the scientific notation may not be readily understandable to individuals unfamiliar with it.\n\n\n\nOnly plot mean or median as a red dotted line, for comparison between quarters\nThe graph gives an overall sense of trend. For more specific analysis, adding a description before or after the plot should suffice\nConvert all prices in axes to “millions” unit for ease of interpretability"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#sketch",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#sketch",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Sketch",
    "text": "Sketch"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below loads the following packages using uses p_load() of pacman package:\n\n\n\n\n\n\n\ntidyverse\n\nInclude dpylr for data manipulation with “mutate”, “group_by”, “summarize”, etc.\nInclude ggplot2 for visualisation through histogram, boxplots, etc.\nInclude forcats for factoring and ordering of variables\n\n\n\nggdist\nggridges\nggrepel\nggthemes & hrbrthemes\n\nFor visualisation of distributions and uncertainity.\nFor creating density plots for visualisation of continuous distribution.\nFor repelling overlapping text labels in plot\nFor customisation of plot appearance\n\n\n\npatchwork\nFor combination and alignment of multiple plots for each visualisation.\n\n\nknitr\nFor elegant, flexible and fast report generation of underlying dataframes.\n\n\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, readr, ggdist, ggridges, colorspace, knitr, forcats, reshape2, png, grid)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-the-data",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe data has been split into multiple .csv files\nThey will be loaded seperately, then bound together using rbind.\n\n\nrealis_1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis_2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis_3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis_4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis_5 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\nrealis_full &lt;- rbind(realis_1, realis_2, realis_3, realis_4, realis_5)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#summary-of-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#summary-of-data",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Summary of Data",
    "text": "Summary of Data\nsummary() function used to obtain dataset min, max values and interquartile range.\n\nOverview of Tibble Data FrameCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTransacted_Price\nArea_SQFT\nUnit_Price_PSF\nNumber_of_Units\n\n\n\n\n\nMin. : 440000\nMin. : 322.9\nMin. : 138\nMin. : 1.000\n\n\n\n1st Qu.: 1280000\n1st Qu.: 721.2\n1st Qu.:1384\n1st Qu.: 1.000\n\n\n\nMedian : 1660000\nMedian : 990.3\nMedian :1762\nMedian : 1.000\n\n\n\nMean : 2143286\nMean : 1191.6\nMean :1852\nMean : 1.005\n\n\n\n3rd Qu.: 2320000\n3rd Qu.: 1302.4\n3rd Qu.:2260\n3rd Qu.: 1.000\n\n\n\nMax. :392180000\nMax. :144883.4\nMax. :5756\nMax. :60.000\n\n\n\n\n\n\n\n\n# Understanding the distribution of numerical values in Realis \nrealis_num &lt;- realis_full[,c(\"Transacted Price ($)\", \"Area (SQFT)\", \"Unit Price ($ PSF)\", \"Number of Units\")]\n\nrealis_num &lt;- realis_num %&gt;% \n  rename(\"Transacted_Price\" = \"Transacted Price ($)\") %&gt;% \n  rename(\"Area_SQFT\" = \"Area (SQFT)\") %&gt;%\n  rename(\"Unit_Price_PSF\" = \"Unit Price ($ PSF)\") %&gt;% \n  rename(\"Number_of_Units\" = \"Number of Units\")\n  \nkable(summary(realis_num))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#exploring-outliers",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#exploring-outliers",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Exploring outliers",
    "text": "Exploring outliers\n\nCommercial En-bloc\nThe data set includes transactions that include commercial purchases that are infrequent and done by private developers for large land masses. This subset of transactions are unlikely to be done by individual buyers, and will be excluded from subsequent visualisation to prevent distortion of the axis.\n\nNumber of Units &gt; 5\nType of Sale = “Resale”\nPurchaser Address Indicator =“Private”\nTenure = “Freehold”\n\n\nOverview of DataframeCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProject Name\nTransacted_Price\nArea_SQFT\nUnit_Price_PSF\nSale_Date\nAddress\nType of Sale\nType of Area\nArea (SQM)\nUnit Price ($ PSM)\nNett Price($)\nProperty Type\nNumber_of_Units\nTenure\nCompletion Date\nPurchaser Address Indicator\nPostal Code\nPostal District\nPostal Sector\nPlanning Region\nPlanning Area\nRegion_type\n\n\n\n\nBAGNALL COURT\n115280000\n68491.33\n1683\n04 Jan 2023\n813,817 ETC ENBLOC UPPER EAST COAST ROAD\nResale\nStrata\n6363\n18117\n-\nCondominium\n43\nFreehold\n1991\nPrivate\n466609\n16\n46\nEast Region\nBedok\nOCR\n\n\nMEYER PARK\n392180000\n144883.44\n2707\n09 Feb 2023\n81,83 ENBLOC MEYER ROAD #19-01,02 ETC\nResale\nStrata\n13460\n29137\n-\nCondominium\n60\nFreehold\n1985\nPrivate\n437910\n15\n43\nCentral Region\nMarine Parade\nRCR\n\n\nKEW LODGE\n66800000\n25177.00\n2653\n23 May 2023\n34,34A,36 ETC ENBLOC KHEAM HOCK ROAD\nResale\nStrata\n2339\n28559\n-\nTerrace House\n11\nFreehold\n1984\nPrivate\n298796\n11\n29\nCentral Region\nNovena\nCCR\n\n\nKARTAR APARTMENTS\n18000000\n6964.31\n2585\n11 Oct 2023\n41A,43 ETC ENBLOC THOMSON ROAD\nResale\nStrata\n647\n27821\n-\nApartment\n7\nFreehold\n-\nPrivate\n307583\n11\n30\nCentral Region\nNovena\nCCR\n\n\n\n\n\n\n\n\nenbloc_set &lt;- realis_full %&gt;% filter(`Tenure` == \"Freehold\", \n                                     `Number of Units` &gt; 5, \n                                     `Purchaser Address Indicator` == \"Private\", \n                                     `Type of Sale` == \"Resale\"\n                                      )\nenbloc_set_2 &lt;- enbloc_set %&gt;% \n  rename(\"Transacted_Price\" = \"Transacted Price ($)\") %&gt;% \n  rename(\"Area_SQFT\" = \"Area (SQFT)\") %&gt;%\n  rename(\"Unit_Price_PSF\" = \"Unit Price ($ PSF)\") %&gt;% \n  rename(\"Sale_Date\" = \"Sale Date\") %&gt;% \n  rename(\"Number_of_Units\" = \"Number of Units\")\n\nkable(enbloc_set_2)\n\n\n\n\n\n\nLarge new launches\nAnother subset identified are new project launches, where we observe a spike in transaction volumes in the month which new large developments are launched.\n\nType of Sale = “New Sale”\nCompletion Date = “Uncompleted”\nSum of Number of Units group by Project Name &gt; 100\n\n\nOverview of DataframeCode\n\n\n\n\n\n\n\nProject Name\nproj_sale\nmedian_proj_psf\n\n\n\n\nTHE RESERVE RESIDENCES\n679\n2474.0\n\n\nGRAND DUNMAN\n641\n2523.0\n\n\nLENTOR HILLS RESIDENCES\n487\n2107.0\n\n\nN.A.\n486\n2473.5\n\n\nLENTOR MANSION\n409\n2269.0\n\n\nTEMBUSU GRAND\n389\n2461.0\n\n\n\n\n\n\n\n\nSale_by_proj &lt;- realis_full %&gt;% \n  group_by(`Project Name`) %&gt;% \n  mutate(total_sale = sum(`Number of Units`))%&gt;% \n  arrange(desc(total_sale)) %&gt;%\n  ungroup()\n  \nnew_launch &lt;- Sale_by_proj %&gt;% \n  filter(`Type of Sale` == \"New Sale\", \n         `Completion Date` == \"Uncompleted\")\n\nlarge_new_launch &lt;- Sale_by_proj %&gt;% \n  filter(`Type of Sale` == \"New Sale\", \n         `Completion Date` == \"Uncompleted\", \n         total_sale &gt; 100)\n\nlarge_new_launch &lt;- large_new_launch %&gt;% \n  rename(\"Unit_Price_PSF\" = \"Unit Price ($ PSF)\")\n\nnew_proj_sale &lt;- large_new_launch %&gt;%\n  group_by(`Project Name`) %&gt;%\n  summarize(proj_sale = total_sale, \n            median_proj_psf = median(as.numeric(`Unit_Price_PSF`))) %&gt;%\n  arrange(desc(proj_sale))\n\nkable(head(distinct(new_proj_sale)), n =5)\n\n\n\n\n\n\nLuxury market\nTransactions with Transacted Price ($) in the top 2.5% are excluded in earlier price distribution visualisations as they skewed the records.\n\nhigh_val &lt;- realis_clean2 %&gt;%\n  filter(`Transacted Price ($)` &gt; quantile(`Transacted Price ($)`, 0.975, na.rm = TRUE)) \n\nind_high_val &lt;- anti_join(high_val, enbloc_set, by = c(\"Tenure\",\"Number of Units\",\"Type of Sale\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#no.-of-property-sold-per-property-type",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#no.-of-property-sold-per-property-type",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "No. of Property Sold per Property Type",
    "text": "No. of Property Sold per Property Type\n\nData Wrangling\n\nsale_by_prop_month &lt;- realis_clean2 %&gt;% \n  group_by(`Property Type`, (year_month = format(`Sale Date`, \"%Y-%m\"))) %&gt;%\n  summarise(total_units = sum(`Number of Units`), avg_price = median(`Transacted Price ($)`))\n\nsale_by_prop_month &lt;- sale_by_prop_month %&gt;% rename_with( ~ \"year_month\", .cols = 2)\n\n# Converting the year_month from character back to continuous date for line plots \nsale_by_prop_month$year_month &lt;- as.Date(paste0(sale_by_prop_month$year_month, \"-01\"))\n\n# Extract the month and year information for labeling\nsale_by_prop_month$month &lt;- format(sale_by_prop_month$year_month, \"%b\")\nsale_by_prop_month$year &lt;- format(sale_by_prop_month$year_month, \"%Y\")\n\n# Create a label for each point showing the month and year\nsale_by_prop_month$label &lt;- paste(sale_by_prop_month$month, sale_by_prop_month$year)\n\nsale_by_prop_month_2 &lt;- sale_by_prop_month[,c(\"Property Type\", \"label\", \"total_units\", \"avg_price\")]\n\nmonth_sale &lt;- dcast(sale_by_prop_month_2, `Property Type` ~ `label`, value.var = \"total_units\")\n\nmonth_price &lt;- dcast(sale_by_prop_month_2, `Property Type` ~ `label`, value.var = \"avg_price\")\n\n\n\nHistogram Plot\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n# Sum the total number of units sold per month\nmonthly_sum &lt;- sale_by_prop_month %&gt;%\n  group_by(year_month) %&gt;%\n  summarise(total_units_sum = sum(total_units))\n\n# Calculate the mean of the total number of units sold per month\nmean_value &lt;- mean(monthly_sum$total_units_sum)\n\n# Plot the histogram with a mean line\nhist_plot &lt;- ggplot(data = sale_by_prop_month, \n                    aes(x = year_month, y = total_units, fill = `Property Type`)) + \n  geom_col(color = \"grey30\") + \n  labs(title = \"Distribution of Units Sold per Month\", \n       x = \"\", \n       y = \"No. of Units Sold\") +\n scale_fill_manual(values = prop_colors) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  lims(x = as.Date(c(\"2023-01-01\", \"2024-03-01\"))) +\n  scale_x_continuous(breaks = seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"),\n                     labels = format(seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"), \"%b-%y\")) +\n  geom_hline(yintercept = mean_value, linetype = \"dotted\", color = \"red\") +\n  annotate(\"text\", x = as.Date(\"2023-12-01\"), y = mean_value, label = paste(\"Mean:\", round(mean_value, 2)), vjust = -3, colour=\"red\")\n\nhist_plot\n\n\n\n\n\n\nRaincloud Plot\nOnly select outliers within values defined in upper_bound will be plotted to maintain visibility of the raincloud plot.\n\n# Calculate the upper bound price at 97.5%\nupper_bound &lt;- quantile(realis_clean2$`Transacted Price ($)`, 0.975)\nprint(paste(\"Upper bound price at 97.5%:\", upper_bound))\n\n[1] \"Upper bound price at 97.5%: 6200000\"\n\n# Filter realis_clean2 to include only rows where Transacted Price ($) is less than or equal to the upper bound\nfor_raincloud &lt;- realis_clean2[realis_clean2$`Transacted Price ($)` &lt;= upper_bound, ]\n\n# View the first few rows of the new dataframe\nhead(for_raincloud)\n\n# A tibble: 6 × 27\n  `Project Name`       `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n  &lt;chr&gt;                                 &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n1 THE REEF AT KING'S …                2317000          883.                 2625\n2 URBAN TREASURES                     1823500          883.                 2066\n3 NORTH GAIA                          1421112         1076.                 1320\n4 NORTH GAIA                          1258112         1033.                 1218\n5 PARC BOTANNIA                       1280000          872.                 1468\n6 NANYANG PARK                        5870000         3323.                 1767\n# ℹ 23 more variables: `Sale Date` &lt;date&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Type of Area` &lt;chr&gt;, `Area (SQM)` &lt;dbl&gt;, `Unit Price ($ PSM)` &lt;dbl&gt;,\n#   `Nett Price($)` &lt;chr&gt;, `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;,\n#   Tenure &lt;chr&gt;, `Completion Date` &lt;chr&gt;, `Purchaser Address Indicator` &lt;chr&gt;,\n#   `Postal Code` &lt;chr&gt;, `Postal District` &lt;dbl&gt;, `Postal Sector` &lt;chr&gt;,\n#   `Planning Region` &lt;chr&gt;, `Planning Area` &lt;chr&gt;, Region_type &lt;chr&gt;,\n#   years &lt;dbl&gt;, start_date &lt;date&gt;, end_date &lt;date&gt;, remaining_years &lt;dbl&gt;, …\n\n\nDistribution of Transacted Price by Property Type\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n# Calculate the median transacted price\nmedian_price &lt;- median(for_raincloud$`Transacted Price ($)`)\n\n# Create the plot\nprop_price_dist &lt;- ggplot(for_raincloud, \n                     aes(x = `Property Type`, y = `Transacted Price ($)`, fill = `Property Type` )) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2) +\n   coord_flip() +\n  scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = \"M\")) +\n  scale_fill_manual(values = prop_colors)  + \n  scale_x_discrete() + \n  labs(title = \"Distribution of Transacted Price\\nby Property Type\", \n       x = \"\", \n       y = \"Transacted Price\") +\n   theme(legend.position = \"none\",plot.title = element_text(size = 10)) +\n   geom_hline(yintercept = median_price, linetype = \"dotted\", color = \"red\") +\n  annotate(\"text\", x = 0.5, y = median_price, label = \"Median: 1.6M\", vjust = -6, colour = \"red\")\n\n\nprop_price_dist"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#transaction-price-no.-of-units-sold-by-property-type",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#transaction-price-no.-of-units-sold-by-property-type",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Transaction Price & No. of Units sold by Property Type",
    "text": "Transaction Price & No. of Units sold by Property Type\nThe code chunk below:\n\nPartitions subset of the transaction records based on Property Type\nCreates bar chart on the sum of No of Units sold per month\nCreates line graph on the median Transaction Price for the property sold that month\n\n\nApartmentCondominiumExecutive CondominiumTerrace HouseSemi-Detached HouseDetached House\n\n\n\n# summary(apt_by_month)\n# Max units: 1444, max price = $1,875,000\n\napt_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Apartment\")\n\n# Creating the graph\nhist_plot_apt &lt;- ggplot(data = apt_by_month, aes(x = year_month, y = total_units, fill = total_units)) +\n  geom_col(fill = \"steelblue\") +\n  geom_line(aes(y = avg_price * 1500 / 2000000), color = \"blueviolet\", linewidth = 1) +\n  scale_y_continuous(\n    name = \"No. of Units Sold\",\n    limits = c(0, 1500),\n    sec.axis = sec_axis(~. * 2000000 / 1500, name = \"Median Price\", labels = scales::number_format(scale = 1e-6, suffix = \"M\"))\n  ) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 90, hjust = 1)) +  \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%y\") +\n  scale_x_continuous(breaks = seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"),labels = format(seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"), \"%b-%y\")) +\n  labs(x = NULL)\n\nhist_plot_apt\n\n\n\n\n\n\n\n# summary(c_by_month)\n# max unit sold: 1108, max price: 1780000\n\nc_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Condominium\")\n\n#Creating the graph\nhist_plot_c &lt;- ggplot(data = c_by_month, aes(x = year_month, y = total_units, fill = total_units)) +\n  geom_col(fill = \"skyblue\") +\n  geom_line(aes(y = avg_price * 1500 / 2000000), color = \"blueviolet\", linewidth = 1) +\n  scale_y_continuous(\n    name = \"No. of Units Sold\",\n    limits = c(0, 1500),\n    sec.axis = sec_axis(~. * 2000000 / 1500, name = \"Median Price\", labels = scales::number_format(scale = 1e-6, suffix = \"M\"))\n  ) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 90, hjust = 1)) +  \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%y\") +\n  scale_x_continuous(breaks = seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"),labels = format(seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"), \"%b-%y\")) +\n  labs(x = NULL)\n\nhist_plot_c\n\n\n\n\n\n\n\n# summary(ec_by_month) \n# max unit sold: 459, max avg price = 1504000\n\nec_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Executive Condominium\")\n\n\n#Creating the graph\nhist_plot_ec &lt;- ggplot(data = ec_by_month, aes(x = year_month, y = total_units, fill = total_units)) +\n  geom_col(fill = \"royalblue\") +\n  geom_line(aes(y = avg_price * 1500 / 2000000), color = \"blueviolet\", linewidth = 1) +\n  scale_y_continuous(\n    name = \"No. of Units Sold\",\n    limits = c(0, 1500),\n    sec.axis = sec_axis(~. * 2000000 / 1500, name = \"Median Price\", labels = scales::number_format(scale = 1e-6, suffix = \"M\"))\n  ) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 90, hjust = 1)) +  \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%y\") +\n  scale_x_continuous(breaks = seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"),labels = format(seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"), \"%b-%y\")) +\n  labs(x = NULL)\n\nhist_plot_ec\n\n\n\n\n\n\n\n# kable(summary(t_by_month))\n# max units: 95\n# max price: 3,844,000\n\nt_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Terrace House\")\n\n\n#Creating the graph\nhist_plot_t &lt;- ggplot(data = t_by_month, aes(x = year_month, y = total_units, fill = total_units)) +\n  geom_col(fill = \"deepskyblue\") +\n  geom_line(aes(y = avg_price * 100 / 15000000), color = \"blueviolet\", linewidth = 1) +\n  scale_y_continuous(\n    name = \"No. of Units Sold\",\n    limits = c(0, 100),\n    sec.axis = sec_axis(~. * 15000000 / 100, name = \"Median Price\", labels = scales::number_format(scale = 1e-6, suffix = \"M\"))\n  ) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 90, hjust = 1)) +  \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%y\")  +\n  scale_x_continuous(breaks = seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"),labels = format(seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"), \"%b-%y\")) +\n  labs(x = NULL)\n\nhist_plot_t\n\n\n\n\n\n\n\n# kable(summary(sd_by_month))\n# max unit: 67\n# max price: 6,539,400\n\nsd_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Semi-Detached House\")\n\n\n#Creating the graph\nhist_plot_sd &lt;- ggplot(data = sd_by_month, aes(x = year_month, y = total_units, fill = total_units)) +\n  geom_col(fill = \"cornflowerblue\") +\n  geom_line(aes(y = avg_price * 100 / 15000000), color = \"blueviolet\", linewidth = 1) +\n  scale_y_continuous(\n    name = \"No. of Units Sold\",\n    limits = c(0, 100),\n    sec.axis = sec_axis(~. * 15000000 / 100, name = \"Median Price\", labels = scales::number_format(scale = 1e-6, suffix = \"M\"))\n  ) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 90, hjust = 1)) +  \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%y\")  +\n  scale_x_continuous(breaks = seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"),labels = format(seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"), \"%b-%y\")) +\n  labs(x = NULL)\n\nhist_plot_sd\n\n\n\n\n\n\n\n# kable(summary(d_by_month))\n# max unit: 34\n# max price: 14,500,000\n\nd_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Detached House\")\n\nhist_plot_d &lt;- ggplot(data = d_by_month, aes(x = year_month, y = total_units, fill = total_units)) +\n  geom_col(fill = \"lightblue\") +\n  geom_line(aes(y = avg_price * 100 / 15000000), color = \"blueviolet\", linewidth = 1) +\n  scale_y_continuous(\n    name = \"No. of Units Sold\",\n    limits = c(0, 100),\n    sec.axis = sec_axis(~. * 15000000 / 100, name = \"Median Price\", labels = scales::number_format(scale = 1e-6, suffix = \"M\"))\n  ) +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 90, hjust = 1)) +  \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%y\")  +\n  scale_x_continuous(breaks = seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"),labels = format(seq(as.Date(\"2023-01-01\"), as.Date(\"2024-03-01\"), by = \"1 month\"), \"%b-%y\")) +\n  labs(x = NULL)\n\nhist_plot_d"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#composite-plot-1",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#composite-plot-1",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Composite Plot 1",
    "text": "Composite Plot 1\nTo facilitate the composite plot, the legend for the plots are hidden\n\nhist_plot &lt;- hist_plot + theme(legend.position = \"none\")\n\nPatchwork is used to create the composite plot. Since the color scheme remains consistent throughout the plot and the property types are clearly represented in the raincloud plot just below it, the legend is omitted from the bar chart.\n\n# Combine the plots\ncplot1 &lt;- hist_plot + prop_price_dist + plot_layout(heights = c(1, 4), ncol =1)\n\n# Display the combined plot\ncplot1"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#composite-plot-2",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#composite-plot-2",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Composite Plot 2",
    "text": "Composite Plot 2\nIn the resulting bar-line charts, the use of non-standardized Y-axes diminishes the ease of direct comparison between different categories. Standardizing the values could potentially improve comparability but would obscure bars representing extremely small values. For instance, the “Number of Units Sold” might vary widely, such as 34 for Detached Houses and 1444 for Apartments.\nTo strike a balance, two separate scales were employed for each Y-axis. The left Y-axis ranges from 0 to 100 for the number of units sold and from 0 to 150 for the median price. Meanwhile, the right Y-axis spans from 0 to 2 million for the number of units sold and from 0 to 15 million for the median price. This approach ensures that both the magnitude of the values and the differences between categories remain visible to the audience.\nTo facilitate the composite plot, the x axis showing Sale Date for the plots are hidden\n\nhist_plot_apt &lt;- hist_plot_apt + \n  labs(x = NULL) +\n    theme(axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          axis.ticks.x = element_blank())\n\nhist_plot_c &lt;- hist_plot_c + \n  labs(x = NULL) +\n    theme(axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          axis.ticks.x = element_blank())\n\nhist_plot_d &lt;- hist_plot_d + \n  labs(x = NULL) +\n    theme(axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          axis.ticks.x = element_blank())\n\nhist_plot_ec &lt;- hist_plot_ec + \n  labs(x = NULL) +\n    theme(axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          axis.ticks.x = element_blank())\n\nhist_plot_sd &lt;- hist_plot_sd + \n  labs(x = NULL) +\n    theme(axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          axis.ticks.x = element_blank())\n\nhist_plot_t &lt;- hist_plot_t + \n  labs(x = NULL) +\n    theme(axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          axis.ticks.x = element_blank())\n\nIn the plot below, we see that:\n\nHaving repeated y axis labels are not necessary, since they are consistent for all plots\nWith X-axis i.e. sale date removed, it can be more challenging to discern when the transaction happened\nDue to the scale on the left Y-axis, bar charts for Detached House, Semi Detached House and Terrace House are difficult to interpret from the plot\nDue to the scales of the Y axis, the plots should also be rearranged accordingly for easy visual comparison\nTitle “Transaction Price & No. of Units sold by Property Type” is missing\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nhist_plot_apt / hist_plot_c / hist_plot_d / hist_plot_ec / hist_plot_sd / hist_plot_t\n\n\n\n\nTherefore, we revise the plot as follows:\n\nHide all Y axis labels\nOnly show Y axis label i.e. “Number of Units” and “Median Price” for third plot i.e. Executive Condominium. This will serve as an overall Y-axis label . It should be clear that this label applies to all plots in the composite plots\nOnly last plot i.e. Terrace House, will show X-axis label “Sale date”. It should be clear that this label applies to all above plots as well\nRearrange the plots to show in this order: Apartment, Condominium, Executive Condominium, Detached House, Semi Detached House, Terrace House\nAdd overall plot title\n\n\n# List of plots\nplot_list2 &lt;- list(hist_plot_apt, hist_plot_d, hist_plot_ec, hist_plot_sd, hist_plot_t)\n\n# Apply theme modifications to all plots in the list\nfor (plot in plot_list2) {\n  plot &lt;- plot +\n    labs(x = NULL, y = NULL) +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.title.y = element_blank())\n}\n\n# hist_plot_a add title\nhist_plot_apt &lt;- hist_plot_apt +\n  labs(title = \"Transaction Price & No. of Units sold\\nby Property Type\") +\n  theme(plot.title = element_text(size = 10))\n\n\n# hist_plot_c keep Y axis\nhist_plot_c &lt;- hist_plot_c +\n  labs(x = NULL) +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())\n\n# hist_plot_t x axis to turn back on\nhist_plot_t &lt;- hist_plot_t +\n  labs(x = NULL, y = NULL) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1),\n        axis.ticks.x = element_line(),\n        axis.title.y = element_blank())\n\nRevised plot\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\ncplot2 &lt;- hist_plot_apt + hist_plot_c + hist_plot_ec + hist_plot_d + hist_plot_sd + hist_plot_t +  plot_layout(ncol = 1,axis_titles = \"collect\") \n\ncplot2\n\n\n\n\n\ncplot1 | cplot2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#before",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#before",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "Before",
    "text": "Before"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#after",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#after",
    "title": "Take-home Exercise 2 - DataVis Makeover",
    "section": "After",
    "text": "After\n\n\n\n\n\n\n\n\nNote\n\n\n\nThank you Jing Yi for providing your take home exercise 1 for my learning!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications homepage. In this website, you will find my coursework.\nOverview:"
  },
  {
    "objectID": "index.html#hands-on-exercise",
    "href": "index.html#hands-on-exercise",
    "title": "Visual Analytics and Applications",
    "section": "Hands On Exercise",
    "text": "Hands On Exercise\n\n\n\n\n\n\n\n\n\nHands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods\n\n\n\nAlicia Loh\n\n\nApr 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 2 - Beyond ggplot2 Fundamentals\n\n\n\nAlicia Loh\n\n\nApr 17, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3 - Programming Animated Statistical Graphics with R\n\n\n\nAlicia Loh\n\n\nApr 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3 - Programming Interactive Data Visualisation with R\n\n\n\nAlicia Loh\n\n\nApr 20, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4 - Funnel Plots for Fair Comparisons\n\n\n\nAlicia Loh\n\n\nApr 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4 - Visual Statistical Analysis\n\n\n\nAlicia Loh\n\n\nApr 27, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 4 - Visualising Uncertainty\n\n\n\nAlicia Loh\n\n\nApr 30, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#in-class-exercise",
    "href": "index.html#in-class-exercise",
    "title": "Visual Analytics and Applications",
    "section": "In Class Exercise",
    "text": "In Class Exercise\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 1\n\n\n\nAlicia Loh\n\n\nApr 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 2 - Visualising Distribution\n\n\n\nAlicia Loh\n\n\nApr 20, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 4 - Fundamentals of Visual Analytics\n\n\n\nAlicia Loh\n\n\nMay 4, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#take-home-exercise",
    "href": "index.html#take-home-exercise",
    "title": "Visual Analytics and Applications",
    "section": "Take Home Exercise",
    "text": "Take Home Exercise\n\n\n\n\n\n\n\n\n\nTake-home Exercise 1 - Creating Data Visualisation Beyond Default\n\n\n\nAlicia Loh\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 2 - DataVis Makeover\n\n\n\nAlicia Loh\n\n\nApr 30, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "",
    "text": "Statistical graphic methods for visualising distribution using ggplot2 and its extensions for:\n\nRidgeline plot\nRaincloud plot"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#loading-r-packages",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Loading R packages",
    "text": "Loading R packages\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots,\nggdist, a ggplot2 extension spacially desgin for visualising distribution and uncertainty,\ntidyverse, a family of R packages to meet the modern data science and visual communication needs,\nggthemes, a ggplot extension that provides the user additional themes, scales, and geoms for the ggplots package, and\ncolorspace, an R package provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualisations.\n\n\npacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports Exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_df &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#varying-fill-colours-along-the-x-axis",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#varying-fill-colours-along-the-x-axis",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Varying Fill Colours along the X-axis",
    "text": "Varying Fill Colours along the X-axis\nSometimes we would like to have the area under a ridgeline not filled with a single solid color but rather with colors that vary in some form along the x axis.\nTo achieve varying fill colours:\n\ngeom_ridgeline_gradient()\ngeom_density_ridges_gradient()\n\nHowever, they do not allow for alpha transparency.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [°C]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English Grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#mapping-probabilities-directly-onto-colour",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#mapping-probabilities-directly-onto-colour",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Mapping Probabilities directly onto colour",
    "text": "Mapping Probabilities directly onto colour\nStat function called stat_density_ridges() replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nInclude the argument calc_ecdf = TRUE in stat_density_ridges()!\n\n\n\nRidgeline Plots with Quantile Lines\nRidgeline plots can be coloured by quantile using geom_density_ridges_gradient(), via the calculated stat(quantile) \n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\nQuantiles can also be specified by cut points e.g. 2.5% and 97.5% tails to colour the ridgeline plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#plotting-a-half-eye-graph",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#plotting-a-half-eye-graph",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Plotting a Half Eye graph",
    "text": "Plotting a Half Eye graph\nPlot a Half-Eye graph by using stat_halfeye() of ggdist package, producing a Half Eye visualization, which is contains a half-density and a slab-interval.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nRemove the slab interval by setting .width = 0 and point_colour = NA."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#adding-the-boxplot",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#adding-the-boxplot",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Adding the boxplot",
    "text": "Adding the boxplot\nThe second geometry layer i.e. a narrow boxplot is produced using geom_boxplot() of ggplot2 This produces a narrow boxplot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#adding-the-dot-plots",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#adding-the-dot-plots",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Adding the Dot Plots",
    "text": "Adding the Dot Plots\nThe third geometry layer is added using stat_dots() of ggdist package. This produces a half-dotplot, similar to a histogram that indicates the number of samples (number of dots) in each bin. Use side = “left” to specify the dot plots on the left-hand side.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#finishing-touch",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#finishing-touch",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Finishing touch",
    "text": "Finishing touch\n coord_flip() of ggplot2 package is used to flip the raincloud chart horizontally to give it the raincloud appearance. theme_economist() of ggthemes package is also used to give the raincloud chart a professional publishing standard look.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities.\nLearning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nThe following R packages will be used:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#importing-the-data",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "Importing the Data",
    "text": "Importing the Data\nThe COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal.\nFor this hands-on exercise, compares the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\nThe code chunk below imports the data into R and save it into a tibble data frame object called covid19.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "FunnelPlotR methods: The basic plot",
    "text": "FunnelPlotR methods: The basic plot\nThe code chunk below plots a funnel plot.\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n\n\nPlotCode\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\nfunnel_plot(\n  .data = covid19,\n  numerator = `Positive`,\n  denominator = `Death`,\n  group = `Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. Plot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#funnelplotr-methods-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#funnelplotr-methods-makeover-1",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "FunnelPlotR methods: Makeover 1",
    "text": "FunnelPlotR methods: Makeover 1\nThe code chunk below plots a funnel plot.\n\ndata_type argument is used to change from default “SR” to “PR” (i.e. proportions).\nx_range and y_range are used to set the range of x-axis and y-axis\n\n\nPlotCode\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\nfunnel_plot(\n  .data = covid19,\n  numerator = `Death`,\n  denominator = `Positive`,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  x_range = c(0, 6500),  #&lt;&lt;\n  y_range = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. Plot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#funnelplotr-methods-makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#funnelplotr-methods-makeover-2",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "FunnelPlotR methods: Makeover 2",
    "text": "FunnelPlotR methods: Makeover 2\nThe code chunk below plots a funnel plot.\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles.\n\n\nPlotCode\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\nfunnel_plot(\n  .data = covid19,\n  numerator = `Death`,\n  denominator = `Positive`,\n  group = `Sub-district`,\n  data_type = \"PR\",\n  x_range = c(0, 6500),  \n  y_range = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)    \n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. Plot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "Computing the basic derived fields",
    "text": "Computing the basic derived fields\nFirst, derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "Calculate lower and upper limits for 95% and 99.9% CI\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "Plotting a static funnel plot",
    "text": "Plotting a static funnel plot\nIn the code chunk below, ggplot2 functions are used to plot a static funnel plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on Exercise 4 - Funnel Plots for Fair Comparisons",
    "section": "Interactive Funnel Plot: plotly + ggplot2",
    "text": "Interactive Funnel Plot: plotly + ggplot2\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nThe following R packages will be used:\n\nggstatsplotis an extension of ggplot2 package for creating graphics with details from statstical tests included in the plots themselces\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#importing-the-data",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is a pacakge within tidyverse.\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data tibble data frame contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nset.seed(1234) # for reproducibility\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#unpacking-the-bayes-factor",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#unpacking-the-bayes-factor",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Unpacking the Bayes Factor",
    "text": "Unpacking the Bayes Factor\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. i.e., a measure of the strength of evidence in favor of one theory among two competing theories.\nBayes factor allows evaluation of the data in favor of a null hypothesis, and to use external information to do so. It gives the weight of the evidence in favor of a given hypothesis.\nWhen comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10, defined mathematically as:\n\\(\\frac{likelihood of data given H_{1}}{likelihood of data given H_{0}} = \\frac{P(D|H_{1})}{P(D|H_{0})}\\)\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor.\n\n\nInterpreting Bayes Factor\nA Bayes Factor can be any positive number. A common interpretation was first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013:\n\n\n\nB10 Value\nConclusion\n\n\n\n\n&gt;100\nExtreme evidence for H1\n\n\n30-100\nVery strong evidence for H1\n\n\n10-30\nStrong evidence for H1\n\n\n3-10\nModerate evidence for H1\n\n\n1-3\nAnecdotal evidence for H1\n\n\n1\nNo evidence\n\n\n1/3-1\nAnecdotal evidence for H1\n\n\n1/3-1/10\nModerate evidence for H1\n\n\n1/10-1/30\nStrong evidence for H1\n\n\n1/30-1/100\nVery strong evidence for H1\n\n\n&lt;1/100\nExtreme evidence for H1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything\n\n\nggbetweenstats - Summary of tests\nFollowing (between-subjects) tests are carried out for each type of analyses:\n\n\n\n\n\n\n\n\nType\nNo. of groups\nTest\n\n\n\n\nParametric\n&gt;2\nFisher’s or Welch’s one-way ANOVA\n\n\nNon-parametric\n&gt;2\nKruskal-Wallis one-way ANOVA\n\n\nRobust\n&gt;2\nHeteroscedastic one-way ANOVA for trimmed means\n\n\nBayes Factor\n&gt;2\nFisher’s ANOVA\n\n\nParametric\n2\nStudent’s or Welch’s t-test\n\n\nNon-parametric\n2\nMann-Whitney U test\n\n\nRobust\n2\nYuen’s test for trimmed means\n\n\nBayes Factor\n2\nStudent’s t-test\n\n\n\nFollowing effect sizes (and confidence intervals) are available for each type of test:\n\n\n\n\n\n\n\n\n\nType\nNo. of Groups\nEffect Size\nConfidence Intervals\n\n\n\n\nParametric\n&gt;2\n\\({\\eta^2}_{p},\\eta^2,{\\omega^2}_{p},\\omega^2\\)\nYes\n\n\nNon-parametric\n&gt;2\n\\({\\eta^2}_{H}\\) (H-statistic based eta-squared)\nYes\n\n\nRobust\n&gt;2\n\\(\\xi\\) (Explanatory measure of effect size)\nYes\n\n\nBayes Factor\n&gt;2\nNo\nNo\n\n\nParametric\n2\nCohen’s d, Hedge’s g (central-and-noncentral-t distribution based)\nYes\n\n\nNon-parametric\n2\nr (computed as \\(Z/\\sqrt{N}\\))\nYes\n\n\nRobust\n2\n\\(\\xi\\) (Explanatory measure of effect size)\nYes\n\n\nBayes Factor\n2\nNo\nNo\n\n\n\nSummary of pairwise comparison tests supported in ggbetweenstats\n\n\n\n\n\n\n\n\n\nType\nEqual Variance\nTest\np-value Adjustment?\n\n\n\n\nParametric\nNo\nGames Howell Test\nYes\n\n\nParametric\nYes\nStudent’s t Test\nYes\n\n\nNon-Parametric\nNo\nDunn Test\nYes\n\n\nRobust\nNo\nYuen’s Trimmed Means Test\nYes\n\n\nBayes Factor\nNA\nStudent’s t Test\nNA"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "Significant Test of Association (Depedence) : ggbarstats() methods\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut(). ggbarstats() is used to build a visual for Significant Test of Association\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualising-models",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualising-models",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Visualising Models",
    "text": "Visualising Models\nVisualise model diagnostic and model parameters by using parameters package.\n\nToyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#installing-and-loading-the-required-libraries-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#installing-and-loading-the-required-libraries-1",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\n\npacman::p_load(readxl, performance, parameters, see)\n\n\nImporting Excel file: readxl methods\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Model Diagnostic: checking for multicolinearity:",
    "text": "Model Diagnostic: checking for multicolinearity:\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Model Diagnostic: checking normality assumption",
    "text": "Model Diagnostic: checking normality assumption\nIn the code chunk, check_normality() of performance package.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n &lt;- check_normality(model1)\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\nIn the code chunk, check_heteroscedasticity() of performance package.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#model-diagnostic-complete-check",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#model-diagnostic-complete-check",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\nWe can also perform the complete by using check_model().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Visualising Regression Parameters: see methods",
    "text": "Visualising Regression Parameters: see methods\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on Exercise 4 - Visual Statistical Analysis",
    "section": "Visualising Regression Parameters: ggcoefstats() methods",
    "text": "Visualising Regression Parameters: ggcoefstats() methods\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nThe following R packages will be used:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#importing-the-data",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is a pacakge within tidyverse.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data tibble data frame contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Tooltip effect with tooltip aesthetic",
    "text": "Tooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. \nFirst, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Displaying multiple information on tooltip",
    "text": "Displaying multiple information on tooltip\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7. By hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#customising-tooltop-style",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#customising-tooltop-style",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Customising Tooltop style",
    "text": "Customising Tooltop style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor more customisations, refer to Customizing girafe objects"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#displaying-statistics-on-tooltip",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Displaying statistics on tooltip",
    "text": "Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Hover effect with data_id aesthetic",
    "text": "Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe default value of the hover css is hover_css = “fill:orange;”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#styling-hover-effect",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Styling hover effect",
    "text": "Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#plot-1-combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#plot-1-combining-tooltip-and-hover-effect",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Plot 1: Combining tooltip and hover effect",
    "text": "Plot 1: Combining tooltip and hover effect\nThe tooltip and hover effects are combined in the interactive statistical graph in the code chunk below.\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#click-effect-with-onclick",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Click effect with onclick",
    "text": "Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web. Web document link with a data object will be displayed on the web browser upon mouse click.\nThe code chunk below shown an example of onclick.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nClick actions must be a string column in the dataset containing valid javascript instructions."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\nWhen a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#there-are-two-ways-to-create-interactive-graph-by-using-plotly-they-are",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#there-are-two-ways-to-create-interactive-graph-by-using-plotly-they-are",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "There are two ways to create interactive graph by using plotly, they are:",
    "text": "There are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Creating an interactive scatter plot: plot_ly() method",
    "text": "Creating an interactive scatter plot: plot_ly() method\nThe code chunk below shows an example a basic interactive plot created by using plot_ly().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Working with visual variable: plot_ly() method",
    "text": "Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Creating an interactive scatter plot: ggplotly() method",
    "text": "Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe only extra line you need to include in the code chunk is ggplotly()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Interactive Data Visualisation - crosstalk methods",
    "text": "Interactive Data Visualisation - crosstalk methods\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3 - Programming Interactive Data Visualisation with R",
    "section": "Linked brushing: crosstalk method",
    "text": "Linked brushing: crosstalk method\nCode chunk below is used to implement coordinated brushing.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R. Otherwise, tidyverse will be installed and launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "A Layered Grammar of Graphics",
    "text": "A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics.\nThere are seven grammars of ggplot2:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThe y scale is misleading and not very useful.\n\n\nThe code chunk below does the following:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_histogram()",
    "text": "Geometric Objects: geom_histogram()\nThe code chunk below, uses geom_histogram() create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe default bin is 30"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing geom()",
    "text": "Modifying a geometric object by changing geom()\nThe code chunk below, does the following:\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing aes()",
    "text": "Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom-density()",
    "text": "Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combining-geom-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combining-geom-objects",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Combining geom objects",
    "text": "Combining geom objects\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat()",
    "text": "Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Adding a best fit curve on a scatterplot",
    "text": "Adding a best fit curve on a scatterplot\nThe interpretability of scatterplots can be improved by adding a best fit curve. n the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe default method used is loess.\n\n\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "facet_grid() function",
    "text": "facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\nThe scatterplot below is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with theme",
    "text": "Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello, my name is Alicia.\nHere is a quick introduction of me and my life.\n\n\n\n\n\n\n\n\n\nMy motivations for MITB\n\n\n\nChat with me on UniBuddy"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nBesides tidyverse, the following R packages will be used.\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is a pacakge within tidyverse.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data tibble data frame contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Working with ggrepel",
    "text": "Working with ggrepel\nggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text seen below. Simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBenefits of ggplot2 over in-built R graphics\n\nAutomated Legends: Unlike built-in plotting which requires manual legend creation, ggplot2 automatically generates legends based on the data’s aesthetics. This streamlines the process, especially for beginners who may find managing legends challenging.\nSimplified Faceting: ggplot2 simplifies the creation of faceted plots (multiple subplots) compared to base R plotting. The latter can be quite complex, requiring setup with par() and potentially confusing for loops, which might be overwhelming for beginners.\nTidy Data Integration: ggplot2 encourages the use of ‘tidy data’ principles, aligning with how other R tools and packages handle data. This practice helps beginners learn a consistent and widely-adopted approach to data analysis in R."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Working with ggtheme package",
    "text": "Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots made by:\n\nFivethirtyeight\nThe Economist\nThe Wall Street Journal\namong others\n\nThe Economist theme is used below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Working with hrbthems package",
    "text": "Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe second goal centers around productivity for a production workflow, which is the context for where the elements of hrbrthemes should be used.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15\ngrid argument is used to remove the x-axis grid lines"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-1-distribution-of-math-scores-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-1-distribution-of-math-scores-histogram",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Plot 1: Distribution of Math Scores (Histogram)",
    "text": "Plot 1: Distribution of Math Scores (Histogram)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-2-distribution-of-english-scores-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-2-distribution-of-english-scores-histogram",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Plot 2: Distribution of English Scores (Histogram)",
    "text": "Plot 2: Distribution of English Scores (Histogram)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-3-english-vs-maths-score-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-3-english-vs-maths-score-scatterplot",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Plot 3: English vs Maths score (Scatterplot)",
    "text": "Plot 3: English vs Maths score (Scatterplot)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English vs Maths scores for Primary 3\")\n\np3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Creating Composite Graphics: pathwork methods",
    "text": "Creating Composite Graphics: pathwork methods\nggplot2 extension’s functions support composite figures by combining several graphs e.g., grid.arrange() of gridExtra package and plot_grid() of cowplot package.\nThis section uses a ggplot2 extension called patchwork, specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax to create layouts. General syntax:\n\nPlus Sign “+” - Two-Column Layout\nParenthesis “( )” - Create a subplot group.\nDivision Sign “/” - Two-Row Layout"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\nFigure in the tabset below shows a composite of two histograms (p1 & p2 from above) created using patchwork.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote the syntax simplicity. i.e. p1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Combining three ggplot2 graphs",
    "text": "Combining three ggplot2 graphs\nMore complex composites can be achieved by using appropriate operators. For example, the composite figure below uses:\n\n“/” - stack two ggplot2 graphs on top of another\n“|” - place the plots adjacent to each other\n“( )” - define plot sequence\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nRefer to Plot Assembly. for more modification and layout controls"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure with tag",
    "text": "Creating a composite figure with tag\npatchwork also provides auto-tagging capabilities to identify subplots in text, as shown in the figure below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote the I, II, III labels in the subplots have been automatically labelled."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Creating figure with insert",
    "text": "Creating figure with insert\n inset_element() of patchwork, allows the placement of one or several plots or graphic elements freely on top or below another plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\npatchwork and theme_economist() of ggthemes package are used to create the figure below\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html",
    "title": "Hands-on Exercise 3 - Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#terminology",
    "title": "Hands-on Exercise 3 - Programming Animated Statistical Graphics with R",
    "section": "Terminology",
    "text": "Terminology\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The settings that control how the animation behaves. For example:\n\nDuration of each frame\nEasing function used between frame transitions\nStart the animation from the current frame or from the beginning"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 3 - Programming Animated Statistical Graphics with R",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nThe following R packages will be used:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#importing-the-data",
    "title": "Hands-on Exercise 3 - Programming Animated Statistical Graphics with R",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports GlobalPopulation.xlsx into R environment by using read_xls() function of readr package.\nreadr is a pacakge within tidyverse.\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\n\n\n\n\n\nTip\n\n\n\nInstead of using mutate_at(), across() can be used to derive the same output"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3 - Programming Animated Statistical Graphics with R",
    "section": "Building a static population bubble plot",
    "text": "Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-the-animated-bubble-plot",
    "title": "Hands-on Exercise 3 - Programming Animated Statistical Graphics with R",
    "section": "Building the animated bubble plot",
    "text": "Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics.\n\nThe default is linear.\nOther methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3 - Programming Animated Statistical Graphics with R",
    "section": "Building an animated bubble plot: ggplotly() method",
    "text": "Building an animated bubble plot: ggplotly() method\nCreate an animated bubble plot by using ggplotly() method.\n\nAppropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\nAlthough show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3 - Programming Animated Statistical Graphics with R",
    "section": "Building an animated bubble plot: plot_ly() method",
    "text": "Building an animated bubble plot: plot_ly() method\nCreate an animated bubble plot by using plot_ly() method.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nThe following R packages will be used:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#importing-the-data",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is a pacakge within tidyverse.\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data tibble data frame contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\nA point estimate is a single number, e.g., mean. Uncertainty, is expressed as standard error, confidence interval, or credible interval.\nThe code chunk below will be used to derive the necessary summary statistics.\n\ngroup_by() of dplyr package is used to group the observation by RACE,\nsummarise() is used to compute the count of observations, mean, standard deviation\nmutate() is used to derive standard error of Maths by RACE, and\nthe output is save as a tibble data table called my_sum.\n\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\nThe code chunk below will be used to display my_sum tibble data frame in an html table format.\n\nTableCode\n\n\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\nknitr::kable(head(my_sum), format = 'html')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Plotting standard error bars of point estimates",
    "text": "Plotting standard error bars of point estimates\nThe code chunk belows plots the standard error bars of mean maths score by race.\nNote:\n\nThe error bars are computed by using the formula mean+/-se.\nFor geom_point(), it is important to indicate stat=“identity”.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Plotting confidence interval of point estimates",
    "text": "Plotting confidence interval of point estimates\nInstead of plotting the standard error bar of point estimates, the confidence intervals of mean maths score by race can also be plotted.\nNote:\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "Visualizing the uncertainty of point estimates with interactive error bars\nThe code chunk below plots interactive error bars for the 99% confidence interval of mean maths score by race.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualising-uncertainty-ggdist-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualising-uncertainty-ggdist-package",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Visualising Uncertainty: ggdist package",
    "text": "Visualising Uncertainty: ggdist package\n\nggdist is an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualising distributions and uncertainty.\nIt is designed for both frequentist and Bayesian uncertainty visualization, taking the view that uncertainty visualization can be unified through the perspective of distribution visualization:\n\nfor frequentist models, one visualises confidence distributions or bootstrap distributions (see vignette(“freq-uncertainty-vis”));\nfor Bayesian models, one visualises probability distributions (see the tidybayes package, which builds on top of ggdist)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\nIn the code chunk below the following arguments are used:\n\n.width = 0.95\n.point = median\n.interval = qi\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\nThe plot below shows 95% and 99% confidence intervals\n\nstat_pointinterval is used twice, once for each confidence interval.\nThe .width argument specifies the width of the intervals.\nThe .point argument specifies that we want to plot the median.\nThe .interval argument is set to “quantile” to indicate quantile-based intervals.\nscale_colour_manual is used to set custom colors for the confidence intervals and provide custom labels.\nOther aesthetic adjustments are made to improve the appearance of the plot, such as adjusting the size and position of the intervals.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(\n    .width = 0.95,\n    .point = \"median\",\n    .interval = \"quantile\",\n    aes(colour = \"95% CI\")) +\n  stat_pointinterval(\n    .width = 0.99,\n    .point = \"median\",\n    .interval = \"quantile\",\n    aes(colour = \"99% CI\")) +\n  scale_colour_manual(\n    values = c(\"95% CI\" = \"blue\", \"99% CI\" = \"red\"),\n    labels = c(\"95% CI\", \"99% CI\")) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualising-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualising-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Visualising the uncertainty of point estimates: ggdist methods",
    "text": "Visualising the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-on Exercise 4 - Visualising Uncertainty",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nThe code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-the-data",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "The code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#installing-and-loading-the-required-libraries",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#installing-and-loading-the-required-libraries",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nThe following R packages will be used:\n\nggstatsplotis an extension of ggplot2 package for creating graphics with details from statstical tests included in the plots themselces\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#importing-the-data",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is a pacakge within tidyverse.\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data tibble data frame contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#one-sample-test-gghistostats-method",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#one-sample-test-gghistostats-method",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nset.seed(1234) # for reproducibility\n\np &lt;- gghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"parametric\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"skyblue\",\n                  alpha = 0.7),\n  normal.curve = FALSE, #default value is FALSE\n  normal.curve.args = list(linewidth = .5),\n  xlab = \"English Scores\"\n)\n\np\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\nExtracting expressions and data frames with statistical details\nggstatsplot also offers a convenience function to extract data frames with statistical details that are used to create expressions displayed in ggstatsplot plots.\n\nextract_stats(p)\n\n$subtitle_data\n# A tibble: 1 × 15\n     mu statistic df.error  p.value method            alternative effectsize\n  &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt;       &lt;chr&gt;     \n1    60      8.77      321 1.04e-16 One Sample t-test two.sided   Hedges' g \n  estimate conf.level conf.low conf.high conf.method conf.distribution n.obs\n     &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;             &lt;int&gt;\n1    0.488       0.95    0.372     0.603 ncp         t                   322\n  expression\n  &lt;list&gt;    \n1 &lt;language&gt;\n\n$caption_data\n# A tibble: 1 × 16\n  term       effectsize      estimate conf.level conf.low conf.high    pd\n  &lt;chr&gt;      &lt;chr&gt;              &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 Difference Bayesian t-test     7.16       0.95     5.54      8.75     1\n  prior.distribution prior.location prior.scale    bf10 method         \n  &lt;chr&gt;                       &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;          \n1 cauchy                          0       0.707 4.54e13 Bayesian t-test\n  conf.method log_e_bf10 n.obs expression\n  &lt;chr&gt;            &lt;dbl&gt; &lt;int&gt; &lt;list&gt;    \n1 ETI               31.4   322 &lt;language&gt;\n\n$pairwise_comparisons_data\nNULL\n\n$descriptive_data\nNULL\n\n$one_sample_data\nNULL\n\n$tidy_data\nNULL\n\n$glance_data\nNULL"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggdotplotstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggdotplotstats",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "ggdotplotstats()",
    "text": "ggdotplotstats()\nIn the code chunk below, the function ggdotplotstats is used to provide an easy way to make publication-ready dot plots/charts with appropriate and selected statistical details embedded in the plot itself.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggdotplotstats(\n  data = exam,\n  x = ENGLISH, \n  y = CLASS,\n  title = \"p\",\n  xlab = \"FALSE\"\n)\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggwithinstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggwithinstats",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "ggwithinstats()",
    "text": "ggwithinstats()\nTransform data into suitable format for plot\n\nexam_long &lt;- exam %&gt;%\n  pivot_longer(\n    cols = ENGLISH:SCIENCE,\n    names_to = \"SUBJECT\",\n    values_to = \"SCORES\"\n  ) %&gt;%\n  filter(CLASS == \"3A\")\n\nIn the code chunk below, the function ggwithinstats is designed to facilitate data exploration, and for making highly customizable publication-ready plots, with relevant statistical details included in the plot itself if desired.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggwithinstats(\n  data = filter(exam_long,\n                SUBJECT %in%\n                  c(\"MATHS\", \"SCIENCE\")),\n  x = SUBJECT, \n  y = SCORES,\n  type = \"p\"\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  label.var = ID, # show student ID \n  label.expression = ENGLISH &gt; 90 & MATHS &gt; 90 #criteria\n  )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-models",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-models",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Visualising Models",
    "text": "Visualising Models\nVisualise model diagnostic and model parameters by using parameters package.\n\nToyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#installing-and-loading-the-required-libraries-1",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#installing-and-loading-the-required-libraries-1",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\n\npacman::p_load(readxl, performance, parameters, see)\n\n\nImporting Excel file: readxl methods\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#multiple-regression-model-using-lm",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#multiple-regression-model-using-lm",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale) # list square model\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Model Diagnostic: checking for multicolinearity:",
    "text": "Model Diagnostic: checking for multicolinearity:\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-checking-normality-assumption",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-checking-normality-assumption",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Model Diagnostic: checking normality assumption",
    "text": "Model Diagnostic: checking normality assumption\nIn the code chunk, check_normality() of performance package.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n &lt;- check_normality(model1)\n\nplot(check_n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\nIn the code chunk, check_heteroscedasticity() of performance package.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-complete-check",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#model-diagnostic-complete-check",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\nWe can also perform the complete by using check_model().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\ncheck_model(model1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-see-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-see-methods",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Visualising Regression Parameters: see methods",
    "text": "Visualising Regression Parameters: see methods\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nplot(parameters(model1))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "In-Class Exercise 4 - Fundamentals of Visual Analytics",
    "section": "Visualising Regression Parameters: ggcoefstats() methods",
    "text": "Visualising Regression Parameters: ggcoefstats() methods\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#downloading-the-dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#downloading-the-dataset",
    "title": "Take-home Exercise 1 - Creating Data Visualisation Beyond Default",
    "section": "Downloading the Dataset",
    "text": "Downloading the Dataset\n\nAccess Dataset via SMU e-library\n\nAfter logging in with SMU credentials, navigate to “Residential” tab\n\nUnder Property Types, “Select All”\nUnder Sale Date, select “2023 Jan” - “2024 Mar”\nClick “Search”\nClick “Download”\nDue to the size of the dataset, it is split into multiple segments. Download all in .csv format"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-designing-tool",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-designing-tool",
    "title": "Take-home Exercise 1 - Creating Data Visualisation Beyond Default",
    "section": "The Designing Tool",
    "text": "The Designing Tool\nThe data will be processed using the appropriate tidyverse family of packages and the statistical graphics will be prepared using ggplot2 and its extensions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-and-loading-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-and-loading-the-required-libraries",
    "title": "Take-home Exercise 1 - Creating Data Visualisation Beyond Default",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below loads the following packages using uses p_load() of pacman package:\n\ntidyverse: (i.e. readr, tidyr, dplyr, ggplot2, lubridate) for performing data science tasks such as importing, tidying, and wrangling data, as well as creating graphics based on The Grammar of Graphics\nreshape2 for transforming data between wide and long formats\nggthemes: provides some extra themes, geoms, and scales for ‘ggplot2’.\nggdist: a ggplot2 extension specially designed for visualising distribution and uncertainty\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\npacman::p_load(tidyverse, reshape2, ggthemes, ggdist, patchwork)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-data",
    "title": "Take-home Exercise 1 - Creating Data Visualisation Beyond Default",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe data has been split into multiple .csv files\nlist.files() list all CSV files in the specified directory.\nAfter looping through each CSV file, read it into a data frame using read_csv(), and store it in a list.\nbind_rows() combines all data frames in the list into a single big data frame.\n\n\ncsv_directory &lt;- \"data/\"\ncsv_files &lt;- list.files(csv_directory, pattern = \"\\\\.csv$\", full.names = TRUE)\n\nrealis &lt;- list()\n\nfor (file in csv_files) {\n  realis[[file]] &lt;- read_csv(file)\n}\n\n\nrealis_all &lt;- bind_rows(realis)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#view-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#view-data",
    "title": "Take-home Exercise 1 - Creating Data Visualisation Beyond Default",
    "section": "View Data",
    "text": "View Data\n\nnames() function prints the names of the columns in the tibble data frame.\nglimpse() function gives a quick overview of the tibble data frame\n\n\nColumn NamesOverview of Tibble Data Frame\n\n\n\ncol_names &lt;- names(realis_all)\ncol_names\n\n [1] \"Project Name\"                \"Transacted Price ($)\"       \n [3] \"Area (SQFT)\"                 \"Unit Price ($ PSF)\"         \n [5] \"Sale Date\"                   \"Address\"                    \n [7] \"Type of Sale\"                \"Type of Area\"               \n [9] \"Area (SQM)\"                  \"Unit Price ($ PSM)\"         \n[11] \"Nett Price($)\"               \"Property Type\"              \n[13] \"Number of Units\"             \"Tenure\"                     \n[15] \"Completion Date\"             \"Purchaser Address Indicator\"\n[17] \"Postal Code\"                 \"Postal District\"            \n[19] \"Postal Sector\"               \"Planning Region\"            \n[21] \"Planning Area\"              \n\n\n\n\n\nglimpse(realis_all)\n\nRows: 26,806\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nrealis_all contains:\n\nPublic and Private residential property transaction data from 1st January 2023 to 31st March 2024.\nThere are 26,806 rows and 21 columns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take-home Exercise 1 - Creating Data Visualisation Beyond Default",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nStandardise Date Format\nThe “Sales Date” column is currently a cha type. It needs to be converted into date format.\ndmy() is a function from the lubridate package that converts character strings to date format in the day-month-year (DMY) order.\n\nStandardise Date FormatView Data\n\n\n\nrealis_all$`Sale Date` &lt;- dmy(realis_all$`Sale Date`)\n\n\n\n\nhead(realis_all$`Sale Date`)\n\n[1] \"2023-01-01\" \"2023-01-02\" \"2023-01-02\" \"2023-01-02\" \"2023-01-03\"\n[6] \"2023-01-03\"\n\n\n\n\n\n\n\nKeep Relevant Rows\nDuplicate and empty rows are removed.\n\nqa_pte_raw &lt;- realis_all %&gt;%\n    distinct() %&gt;%\n    drop_na()\n\n\nView Data\n\nglimpse(qa_pte_raw)\n\nRows: 26,800\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;date&gt; 2023-01-01, 2023-01-02, 2023-01-02, 202…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\n\n\n\nNote\n\n\n\nqa_pte_raw contains:\n\nPrivate residential property transaction data from 1st January 2023 to 31st March 2024\nThere are 26,800 rows and 21 columns.\n\n\n\n\n\n\nKeep Relevant Columns\nNot all 21 columns will be used for analysis e.g. contains overlapping information as another column. Only relevant columns will be kept.\nColumns to drop:\n\nArea (SQFT): Similar information as Area (SQM)\nUnit Price ($ PSF): Similar information as Unit Price ($ PSM)\nNett Price ($): Similar information as Transacted Price ($)\nPostal District and Postal Sector: Overlapping information as Postal Code\n\nColumns to be dropped can be specified by prefixing the column names with a minus sign (-) when using the select() function from the dplyr package.\n\nKeep Relevant ColumnsView Data\n\n\n\nqa_pte &lt;- qa_pte_raw %&gt;%\n    select(\n        -`Area (SQFT)`,\n        -`Unit Price ($ PSF)`,\n        -`Postal District`,\n        -`Postal Sector`\n    )\n\n\n\n\nglimpse(qa_pte)\n\nRows: 26,800\nColumns: 17\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Sale Date`                   &lt;date&gt; 2023-01-01, 2023-01-02, 2023-01-02, 202…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nqa_pte contains:\n\nPrivate residential property transaction data from 1st January 2024 to 31st March 2024\nThere are 26,800 rows and 14 columns.\nColumns:\n\nProject Name\nTransacted Price ($)\nSale Date\nAddress\nType of Sale\nType of Area\nArea (SQM)\nUnit Price ($ PSM)\nNett Price\nProperty Type\nNumber of Units\nTenure\nCompletion Date\nPurchaser Address Indicator\nPostal Code\nPlanning Region\nPlanning Area\n\n\n\n\n\n\nSeparate Data by Quarters\nThe dataset contains 5 quarters:\n\nQuarter 1: 2023 Jan - Mar\nQuarter 2: 2023 Apr - Jun\nQuarter 3: 2023 Jul - Sep\nQuarter 4: 2023 Aug - Dec\nQuarter 5: 2024 Jan - Mar\n\nTo allow for comparison between quarters, qa_pte will be split into the respective quarters by Sale Date.\n\nq1 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &lt;= \"2023-03-31\")\n\nq2 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &gt; \"2023-03-31\" & `Sale Date` &lt;= \"2023-06-30\")\n\nq3 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &gt; \"2023-06-30\" & `Sale Date` &lt;= \"2023-09-30\")\n\nq4 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &gt; \"2023-09-30\" & `Sale Date` &lt;= \"2023-12-31\")\n\nq5 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &gt; \"2023-12-31\")\n\n\n\nView Data\n\nQ1Q2Q3Q4Q5\n\n\n\nglimpse(q1)\n\nRows: 4,722\nColumns: 17\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Sale Date`                   &lt;date&gt; 2023-01-01, 2023-01-02, 2023-01-02, 202…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\nsummary(q2)\n\n Project Name       Transacted Price ($)   Sale Date         \n Length:6125        Min.   :  520000     Min.   :2023-04-01  \n Class :character   1st Qu.: 1268000     1st Qu.:2023-04-24  \n Mode  :character   Median : 1688000     Median :2023-05-13  \n                    Mean   : 2116310     Mean   :2023-05-13  \n                    3rd Qu.: 2350000     3rd Qu.:2023-05-31  \n                    Max.   :66800000     Max.   :2023-06-30  \n   Address          Type of Sale       Type of Area         Area (SQM)    \n Length:6125        Length:6125        Length:6125        Min.   :  30.0  \n Class :character   Class :character   Class :character   1st Qu.:  63.0  \n Mode  :character   Mode  :character   Mode  :character   Median :  89.0  \n                                                          Mean   : 106.7  \n                                                          3rd Qu.: 119.0  \n                                                          Max.   :2339.0  \n Unit Price ($ PSM) Nett Price($)      Property Type      Number of Units \n Min.   : 3364      Length:6125        Length:6125        Min.   : 1.000  \n 1st Qu.:14838      Class :character   Class :character   1st Qu.: 1.000  \n Median :19787      Mode  :character   Mode  :character   Median : 1.000  \n Mean   :20665                                            Mean   : 1.002  \n 3rd Qu.:26390                                            3rd Qu.: 1.000  \n Max.   :57053                                            Max.   :11.000  \n    Tenure          Completion Date    Purchaser Address Indicator\n Length:6125        Length:6125        Length:6125                \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal Code        Planning Region    Planning Area     \n Length:6125        Length:6125        Length:6125       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n\n\n\n\n\nsummary(q3)\n\n Project Name       Transacted Price ($)   Sale Date         \n Length:6200        Min.   :  440000     Min.   :2023-07-01  \n Class :character   1st Qu.: 1280000     1st Qu.:2023-07-15  \n Mode  :character   Median : 1642500     Median :2023-08-05  \n                    Mean   : 2017893     Mean   :2023-08-09  \n                    3rd Qu.: 2255250     3rd Qu.:2023-08-31  \n                    Max.   :32000000     Max.   :2023-09-30  \n   Address          Type of Sale       Type of Area         Area (SQM)   \n Length:6200        Length:6200        Length:6200        Min.   : 30.0  \n Class :character   Class :character   Class :character   1st Qu.: 67.0  \n Mode  :character   Mode  :character   Mode  :character   Median : 91.0  \n                                                          Mean   :105.7  \n                                                          3rd Qu.:119.0  \n                                                          Max.   :995.0  \n Unit Price ($ PSM) Nett Price($)      Property Type      Number of Units\n Min.   : 2158      Length:6200        Length:6200        Min.   :1      \n 1st Qu.:15071      Class :character   Class :character   1st Qu.:1      \n Median :19048      Mode  :character   Mode  :character   Median :1      \n Mean   :19857                                            Mean   :1      \n 3rd Qu.:24048                                            3rd Qu.:1      \n Max.   :59949                                            Max.   :2      \n    Tenure          Completion Date    Purchaser Address Indicator\n Length:6200        Length:6200        Length:6200                \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal Code        Planning Region    Planning Area     \n Length:6200        Length:6200        Length:6200       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n\n\n\n\n\nsummary(q4)\n\n Project Name       Transacted Price ($)   Sale Date         \n Length:4851        Min.   :  570000     Min.   :2023-10-01  \n Class :character   1st Qu.: 1285000     1st Qu.:2023-10-25  \n Mode  :character   Median : 1649340     Median :2023-11-11  \n                    Mean   : 2147366     Mean   :2023-11-13  \n                    3rd Qu.: 2370000     3rd Qu.:2023-12-04  \n                    Max.   :33888000     Max.   :2023-12-31  \n   Address          Type of Sale       Type of Area         Area (SQM)    \n Length:4851        Length:4851        Length:4851        Min.   :  30.0  \n Class :character   Class :character   Class :character   1st Qu.:  67.0  \n Mode  :character   Mode  :character   Mode  :character   Median :  96.0  \n                                                          Mean   : 110.7  \n                                                          3rd Qu.: 122.0  \n                                                          Max.   :1423.1  \n Unit Price ($ PSM) Nett Price($)      Property Type      Number of Units\n Min.   : 1484      Length:4851        Length:4851        Min.   :1.000  \n 1st Qu.:14900      Class :character   Class :character   1st Qu.:1.000  \n Median :18846      Mode  :character   Mode  :character   Median :1.000  \n Mean   :19682                                            Mean   :1.001  \n 3rd Qu.:23492                                            3rd Qu.:1.000  \n Max.   :47026                                            Max.   :7.000  \n    Tenure          Completion Date    Purchaser Address Indicator\n Length:4851        Length:4851        Length:4851                \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal Code        Planning Region    Planning Area     \n Length:4851        Length:4851        Length:4851       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n\n\n\n\n\nsummary(q5)\n\n Project Name       Transacted Price ($)   Sale Date         \n Length:4902        Min.   :  555000     Min.   :2024-01-01  \n Class :character   1st Qu.: 1330000     1st Qu.:2024-01-26  \n Mode  :character   Median : 1688000     Median :2024-02-17  \n                    Mean   : 2100902     Mean   :2024-02-16  \n                    3rd Qu.: 2300000     3rd Qu.:2024-03-14  \n                    Max.   :39500000     Max.   :2024-03-31  \n   Address          Type of Sale       Type of Area         Area (SQM)    \n Length:4902        Length:4902        Length:4902        Min.   :  30.0  \n Class :character   Class :character   Class :character   1st Qu.:  71.0  \n Mode  :character   Mode  :character   Mode  :character   Median :  94.0  \n                                                          Mean   : 111.5  \n                                                          3rd Qu.: 120.7  \n                                                          Max.   :1816.6  \n Unit Price ($ PSM) Nett Price($)      Property Type      Number of Units\n Min.   : 6183      Length:4902        Length:4902        Min.   :1      \n 1st Qu.:15237      Class :character   Class :character   1st Qu.:1      \n Median :18688      Mode  :character   Mode  :character   Median :1      \n Mean   :19502                                            Mean   :1      \n 3rd Qu.:23548                                            3rd Qu.:1      \n Max.   :58099                                            Max.   :2      \n    Tenure          Completion Date    Purchaser Address Indicator\n Length:4902        Length:4902        Length:4902                \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal Code        Planning Region    Planning Area     \n Length:4902        Length:4902        Length:4902       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#number-of-units-sold",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#number-of-units-sold",
    "title": "Take-home Exercise 1 - Creating Data Visualisation Beyond Default",
    "section": "Number of Units Sold",
    "text": "Number of Units Sold\nCreate bar chart plots for the price distribution of each private residence property type. A bar chart or graph that presents categorical data with rectangular bars with heights or lengths proportional to the values that they represent. They can be plotted vertically or horizontally.\nFor each quarter, the data is grouped by property type, then summed by the number of units, in order to obtain the number of units sold per quarter.\n\nSummarise Number of Units Sold by Property Type\n\nQ1 2023Q2 2023Q3 2023Q4 2023Q1 2024\n\n\n\nq1_units &lt;- q1 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(`Total Units` = sum(`Number of Units`), .groups = \"drop\")\nq1_units\n\n# A tibble: 6 × 2\n  `Property Type`       `Total Units`\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 Apartment                      1662\n2 Condominium                    2267\n3 Detached House                   64\n4 Executive Condominium           535\n5 Semi-Detached House              88\n6 Terrace House                   212\n\n\n\n\n\nq2_units &lt;- q2 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(`Total Units` = sum(`Number of Units`), .groups = \"drop\")\nq2_units\n\n# A tibble: 6 × 2\n  `Property Type`       `Total Units`\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 Apartment                      2664\n2 Condominium                    2451\n3 Detached House                   50\n4 Executive Condominium           620\n5 Semi-Detached House             129\n6 Terrace House                   226\n\n\n\n\n\nq3_units &lt;- q3 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(`Total Units` = sum(`Number of Units`), .groups = \"drop\")\nq3_units\n\n# A tibble: 6 × 2\n  `Property Type`       `Total Units`\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 Apartment                      2578\n2 Condominium                    2250\n3 Detached House                   34\n4 Executive Condominium           954\n5 Semi-Detached House             127\n6 Terrace House                   259\n\n\n\n\n\nq4_units &lt;- q4 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(`Total Units` = sum(`Number of Units`), .groups = \"drop\")\nq4_units\n\n# A tibble: 6 × 2\n  `Property Type`       `Total Units`\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 Apartment                      2028\n2 Condominium                    1918\n3 Detached House                   42\n4 Executive Condominium           582\n5 Semi-Detached House              90\n6 Terrace House                   197\n\n\n\n\n\nq5_units &lt;- q5 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(`Total Units` = sum(`Number of Units`), .groups = \"drop\")\nq5_units\n\n# A tibble: 6 × 2\n  `Property Type`       `Total Units`\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 Apartment                      1853\n2 Condominium                    1858\n3 Detached House                   40\n4 Executive Condominium           843\n5 Semi-Detached House              93\n6 Terrace House                   216\n\n\n\n\n\nThe code chunk below plots the number of units by property type for each quarter.\n\n2023 Q12023 Q22023 Q32023 Q42024 Q1\n\n\n\nq1_mean &lt;- mean(q1_units$`Total Units`)\n\nq1_plot &lt;- ggplot(q1_units, aes(x = `Property Type`, y = `Total Units`)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Property Type\", y = \"Total Units Sold\") +\n  ggtitle(\"Q1 2023\") +\n  ylim(0, 2700) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90)) +\n  geom_hline(yintercept = q1_mean, color = \"navy\", linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 5, y = q1_mean + 100, \n           label = paste(\"Mean:\", round(q1_mean, 2)), color = \"navy\")\n\nq1_plot\n\n\n\n\n\n\n\nq2_mean &lt;- mean(q2_units$`Total Units`)\n\nq2_plot &lt;- ggplot(q2_units, aes(x = `Property Type`, y = `Total Units`)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Property Type\", y = \"Total Units Sold\") +\n  ggtitle(\"Q2 2023\") +\n  ylim(0, 2700) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90)) +\n  geom_hline(yintercept = q2_mean, color = \"navy\", linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 5, y = q2_mean + 100, \n           label = paste(\"Mean:\", round(q2_mean, 2)), color = \"navy\")\n\nq2_plot\n\n\n\n\n\n\n\nq3_mean &lt;- mean(q3_units$`Total Units`)\n\nq3_plot &lt;- ggplot(q3_units, aes(x = `Property Type`, y = `Total Units`)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Property Type\", y = \"Total Units Sold\") +\n  ggtitle(\"Q3 2023\") +\n  ylim(0, 2700) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90)) +\n  geom_hline(yintercept = q3_mean, color = \"navy\", linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 5, y = q3_mean + 100, \n           label = paste(\"Mean:\", round(q3_mean, 2)), color = \"navy\")\n\nq3_plot\n\n\n\n\n\n\n\nq4_mean &lt;- mean(q4_units$`Total Units`)\n\nq4_plot &lt;- ggplot(q4_units, aes(x = `Property Type`, y = `Total Units`)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Property Type\", y = \"Total Units Sold\") +\n  ggtitle(\"Q4 2023\") +\n  ylim(0, 2700) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90)) +\n  geom_hline(yintercept = q4_mean, color = \"navy\", linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 5, y = q4_mean + 100, \n           label = paste(\"Mean:\", round(q4_mean, 2)), color = \"navy\")\n\nq4_plot\n\n\n\n\n\n\n\nq5_mean &lt;- mean(q5_units$`Total Units`)\n\nq5_plot &lt;- ggplot(q5_units, aes(x = `Property Type`, y = `Total Units`)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Property Type\", y = \"Total Units Sold\") +\n  ggtitle(\"Q1 2024\") +\n  ylim(0, 2700) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90)) +\n  geom_hline(yintercept = q5_mean, color = \"navy\", linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 5, y = q5_mean + 100, \n           label = paste(\"Mean:\", round(q5_mean, 2)), color = \"navy\")\n\nq5_plot\n\n\n\n\n\n\n\n\n\nComposite Plot\nUsing patchwork package, the plots for Q1 2023 and Q1 2024 are stacked into 1 composite plot for a quarter on quarter analysis.\n\nq1_plot | q5_plot\n\n\n\n\n\n\n\n\n\n\nWrite Up\n\n\n\nComparing bar chart plots for Q1 2023 and Q1 2024 (quarter on quarter), insights emerge regarding the mean number of units sold. In Q1 2023, the average stood at 804.67 units, edging slightly higher to 817.17 units in Q1 2024. This suggests a slight overall increase in property sales.\nWhile Apartments and Executive Condominiums experienced growth in sales volumes, Semi-Detached Houses and Terrace Houses maintained stable figures. Conversely, a decline was observed in the number of Condominiums and Detached Houses sold.\nNotably, Apartments and Condominiums, the predominant property types, experienced the most significant shifts in sales volumes, with Apartments witnessing the largest increase and Condominiums facing the most substantial decline."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#price-distribution",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#price-distribution",
    "title": "Take-home Exercise 1 - Creating Data Visualisation Beyond Default",
    "section": "Price Distribution",
    "text": "Price Distribution\nCreate box plots for the price distribution of each private residence property type. geom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nNote: For better visibility, labels parameter with the function scales::number, formats the y-axis labels to include thousands separators.\nThe code chunk below shows that in Q1 2023 for Condominiums, there are two points with value above 900 million that is affecting the rest of the box plot. Thus, the decision was made to remove those points, and replot the data without the extreme outliers.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data = q1, \n       aes(x = `Property Type`, y = `Transacted Price ($)`)) + \ngeom_boxplot() +\nlabs(title = \"Q1 2023\",\n     x = \"Property Type\",\n     y = \"Transacted Price ($)\") +\nscale_y_continuous(labels = scales::number) + \ntheme_economist() +\ntheme(axis.text.x = element_text(angle = 90)) \n\n\n\n\n\nDrop Extreme Outlier\n\nq1_filtered &lt;- q1 %&gt;%\n  filter(`Transacted Price ($)` &lt;= 90000000)\n\n\n\nPrice Distribution by Property Type\nNote: For better visibility, labels parameter with the function scales::number(scale = 1e-6, suffix = \"M\") formats the y-axis labels to display in the millions unit, instead of the default scientific notation.\n\nQ1 2023Q2 2023Q3 2023Q4 2023Q1 2024\n\n\n\nq1_median &lt;- median(q1_filtered$`Transacted Price ($)`, na.rm = TRUE)\n\nq1_box &lt;- ggplot(data = q1_filtered, \n                aes(x = `Property Type`, y = `Transacted Price ($)`)) + \n          geom_boxplot() +\n          labs(title = \"Q1 2023\",\n                x = \"Property Type\",\n                y = \"Transacted Price ($)\") +\nscale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = \"M\"),\n                  limits = c(0, 67000000)) +\ngeom_hline(yintercept = q1_median,\n             linetype = \"dashed\", color = \"navy\") +\n  annotate(geom = \"text\",\n           x = 4, y = q1_median *10, \n           label = paste(\"Median:\", scales::number(q1_median, color = \"navy\"))) +\ntheme_economist() +\ntheme(axis.text.x = element_text(angle = 90)) \n\nq1_box\n\n\n\n\n\n\n\nq2_median &lt;- median(q2$`Transacted Price ($)`, na.rm = TRUE)\n\nq2_box &lt;- ggplot(data = q2, \n                aes(x = `Property Type`, y = `Transacted Price ($)`)) + \n          geom_boxplot() +\n          labs(title = \"Q2 2023\",\n                x = \"Property Type\",\n                y = \"Transacted Price ($)\") +\nscale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = \"M\"),\n                  limits = c(0, 67000000)) +\ngeom_hline(yintercept = q2_median,\n             linetype = \"dashed\", color = \"navy\") +\n  annotate(geom = \"text\",\n           x = 4, y = q2_median *10, \n           label = paste(\"Median:\", scales::number(q2_median, color = \"navy\"))) +\ntheme_economist() +\ntheme(axis.text.x = element_text(angle = 90)) \n\nq2_box\n\n\n\n\n\n\n\nq3_median &lt;- median(q3$`Transacted Price ($)`, na.rm = TRUE)\n\nq3_box &lt;- ggplot(data = q3, \n                aes(x = `Property Type`, y = `Transacted Price ($)`)) + \n          geom_boxplot() +\n          labs(title = \"Q3 2023\",\n                x = \"Property Type\",\n                y = \"Transacted Price ($)\") +\nscale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = \"M\"),\n                  limits = c(0, 67000000)) +\ngeom_hline(yintercept = q3_median,\n             linetype = \"dashed\", color = \"navy\") +\n  annotate(geom = \"text\",\n           x = 4, y = q3_median *10, \n           label = paste(\"Median:\", scales::number(q3_median, color = \"navy\"))) +\ntheme_economist() +\ntheme(axis.text.x = element_text(angle = 90)) \n\nq3_box\n\n\n\n\n\n\n\nq4_median &lt;- median(q4$`Transacted Price ($)`, na.rm = TRUE)\n\nq4_box &lt;- ggplot(data = q4, \n                aes(x = `Property Type`, y = `Transacted Price ($)`)) + \n          geom_boxplot() +\n          labs(title = \"Q4 2023\",\n                x = \"Property Type\",\n                y = \"Transacted Price ($)\") +\nscale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = \"M\"),\n                  limits = c(0, 67000000)) +\ngeom_hline(yintercept = q4_median,\n             linetype = \"dashed\", color = \"navy\") +\n  annotate(geom = \"text\",\n           x = 4, y = q4_median *10, \n          label = paste(\"Median:\", scales::number(q4_median, color = \"navy\"))) +\ntheme_economist() +\ntheme(axis.text.x = element_text(angle = 90)) \n\nq4_box\n\n\n\n\n\n\n\nq5_median &lt;- median(q5$`Transacted Price ($)`, na.rm = TRUE)\n\nq5_box &lt;- ggplot(data = q5, \n                aes(x = `Property Type`, y = `Transacted Price ($)`)) + \n          geom_boxplot() +\n          labs(title = \"Q1 2024\",\n                x = \"Property Type\",\n                y = \"Transacted Price ($)\") +\nscale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = \"M\"),\n                  limits = c(0, 67000000)) +\ngeom_hline(yintercept = q5_median,\n             linetype = \"dashed\", color = \"navy\") +\n  annotate(geom = \"text\",\n           x = 4, y = q5_median *10, \n          label = paste(\"Median:\", scales::number(q5_median, color = \"navy\"))) +\ntheme_economist() +\ntheme(axis.text.x = element_text(angle = 90)) \n\nq5_box\n\n\n\n\n\n\n\n\n\nComposite Plot\nUsing patchwork package, the plots for Q1 2023 and Q1 2024 are stacked into 1 composite plot for a quarter on quarter analysis.\n\nq1_box | q5_box\n\n\n\n\n\n\n\n\n\n\nWrite Up\n\n\n\nOverall, there is an increase in overall prices from 1.63 million to 1.69 million. However, the price variability for all property types have decreased, with fewer outliers present.\nThe boxplot shows Detached Houses generally have the highest transacted prices. The Q1, median, and Q3 values for this property type are all substantially higher than those of other types, indicating its premium market status.\nDetached Houses also exhibit the highest variability in transacted prices, although there are relatively few outliers. In contrast, Executive Condominiums demonstrate the least variability in transacted prices, with their interquartile ranges (IQR) closely aligning with their medians. This suggests a stable and consistent pricing trend. Executive Condominiums have the lowest transacted prices, indicating their appeal as an affordable option within the private housing market.\nApartments and Condominiums, on the other hand, show a significant number of outliers in their transacted prices, suggesting a wider range of pricing and potentially more diversity in market conditions for these property types."
  }
]