[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#context",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#context",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Context",
    "text": "Context\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S$14,000. For families with monthly household income more than S$14,000, they need to turn to the private residential market."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-task",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "The Task",
    "text": "The Task\nAssuming the role of a graphical editor of a median company, a minimum two and maximum three of data visualisations are prepared to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-data",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "The Data",
    "text": "The Data\n\nTo accomplish the task, transaction data of REALIS will be used.\n\nDownloading the Dataset\n\nAccess Dataset via SMU e-library\n\nAfter logging in with SMU credentials, navigate to “Residential” tab\n\nUnder Property Types, “Select All”\nUnder Sale Date, select “2023 Jan” - “2024 Mar”\nClick “Search”\nClick “Download”\nDue to the size of the dataset, it is split into multiple segments. Download all in .csv format"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-designing-tool",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-designing-tool",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "The Designing Tool",
    "text": "The Designing Tool\nThe data will be processed using the appropriate tidyverse family of packages and the statistical graphics will be prepared using ggplot2 and its extensions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#installing-and-loading-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#installing-and-loading-the-required-libraries",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to check if the listed packages are installed in the computer. If they are, then they will be launched into R. Otherwise, tidyverse will be installed and launched into R.\n\ntidyverse: (i.e. readr, tidyr, dplyr, ggplot2, lubridate) for performing data science tasks such as importing, tidying, and wrangling data, as well as creating graphics based on The Grammar of Graphics\nreshape2 for transforming data between wide and long formats\nggridges for creating ridgeline plots\nggdist for visualising distributions and uncertainty\nggrepel: provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: provides typography-centric themes and theme components for ggplot2.\npatchwork: preparing composite figure created using ggplot2\n\n\npacman::p_load(tidyverse, reshape2, ggridges, ggdist,\n               ggrepel, ggthemes, hrbrthemes, patchwork)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#importing-the-data",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe data has been split into 5 .csv files\nDefine the path to the directory containing the CSV files.\nUse list.files() to list all CSV files in the specified directory.\nLoop through each CSV file, read it into a data frame using read_csv(), and store it in a list.\nUse bind_rows() to combine all data frames in the list into a single big data frame.\n\n\ncsv_directory &lt;- \"data/\"\ncsv_files &lt;- list.files(csv_directory, pattern = \"\\\\.csv$\", full.names = TRUE)\n\nrealis &lt;- list()\n\nfor (file in csv_files) {\n  realis[[file]] &lt;- read_csv(file)\n}\n\n\nrealis_all &lt;- bind_rows(realis)\n\n\nView Data\n\nUse the names() function to print the names of the columns in the tibble data frame.\n\n\ncol_names &lt;- names(realis_all)\ncol_names\n\n [1] \"Project Name\"                \"Transacted Price ($)\"       \n [3] \"Area (SQFT)\"                 \"Unit Price ($ PSF)\"         \n [5] \"Sale Date\"                   \"Address\"                    \n [7] \"Type of Sale\"                \"Type of Area\"               \n [9] \"Area (SQM)\"                  \"Unit Price ($ PSM)\"         \n[11] \"Nett Price($)\"               \"Property Type\"              \n[13] \"Number of Units\"             \"Tenure\"                     \n[15] \"Completion Date\"             \"Purchaser Address Indicator\"\n[17] \"Postal Code\"                 \"Postal District\"            \n[19] \"Postal Sector\"               \"Planning Region\"            \n[21] \"Planning Area\"              \n\n\n\nUse the glimpse() function to get a quick overview of the tibble data frame\n\n\nglimpse(realis_all)\n\nRows: 26,806\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\n\n\n\nNote\n\n\n\nrealis_all contains:\n\nPublic and Private residential property transaction data from 1st January 2023 to 31st March 2024.\nThere are 26806 rows and 21 columns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#data-preparation",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Data Preparation",
    "text": "Data Preparation\nThe task only requires data from the private residential market and sub-markets of Singapore for the 1st quarter of 2024.\n\nStandardise Date Column Format\nThe “Sales Date” column is currently a cha type. It needs to be converted into date format.\ndmy() is a function from the lubridate package that converts character strings to date format in the day-month-year (DMY) order.\nVerify column type\n\nclass(realis_all$`Sale Date`)\n\n[1] \"character\"\n\n\nStandardise Date Format and verify column type after standardisation\n\nrealis_all$`Sale Date` &lt;- dmy(realis_all$`Sale Date`)\nclass(realis_all$`Sale Date`)\n\n[1] \"Date\"\n\n\nCheck data\n\nhead(realis_all$`Sale Date`)\n\n[1] \"2023-01-01\" \"2023-01-02\" \"2023-01-02\" \"2023-01-02\" \"2023-01-03\"\n[6] \"2023-01-03\"\n\n\n\n\nKeep only relevant rows\nFilter and keep only rows that:\n\nSales Date that occur within Q1 2024 i.e. between 01 Jan 2024 to 31 Mar 2024 inclusive.\nPurchaser Address Indicator not equal to “HDB”\n\nIn addition, any duplicate or empty rows are also removed.\n\nq1_pte_raw &lt;- realis_all %&gt;%\n    filter(`Sale Date` &gt;= as.Date(\"2024-01-01\") & \n          `Sale Date` &lt;= as.Date(\"2024-03-31\"),\n          `Purchaser Address Indicator` != \"HDB\") %&gt;%\n    distinct() %&gt;%\n    drop_na()\n\n\n\nView Data\n\nglimpse(q1_pte_raw)\n\nRows: 3,567\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"TE…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2190000, 1954000, 3412…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 807.30, 796.54, 1323.9…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2713, 2453, 2577, 838, 2007,…\n$ `Sale Date`                   &lt;date&gt; 2024-01-01, 2024-01-01, 2024-01-01, 202…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 75.0, 74.0, 123.0, 328.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 29200, 26405, 27741, 9024,…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"N.A\", \"Private\", \"Pri…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"118992\", \"598444\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"05\", \"21\", \"21\", \"28\", \"20\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"11\", \"59\", \"58\", \"79\", \"57\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Queenstown\", \"Bu…\n\n\n\n\n\n\n\n\nNote\n\n\n\nq1_pte_raw contains:\n\nPrivate residential property transaction data from 1st January 2024 to 31st March 2024\nThere are 3567 rows and 21 columns.\n\n\n\n\n\nKeep only relevant columns\nNot all 21 columns will be used for analysis e.g. irrelevant, contains overlapping information as another column. Only relevant columns will be kept.\nColumns to drop:\n\nType of Area: Not used in analysis\nArea (SQM): Similar information as Area (SQFT)\nUnit Price ($ PSM): Similar information as Unit Price ($ PSF)\nNett Price ($): Similar information as Transacted Price ($)\nPurchaser Address Indicator: Not used in analysis\nPostal District and Postal Sector: Overlapping information as Postal Code\n\nThe select() function is used to choose the columns to keep. However, by prefixing the column names with a minus sign (-), the function will drop the specified columns instead.\n\nq1_pte &lt;- q1_pte_raw %&gt;%\n    select(\n        -`Type of Area`,\n        -`Area (SQM)`,\n        -`Unit Price ($ PSM)`,\n        -`Nett Price($)`,\n        -`Purchaser Address Indicator`,\n        -`Postal District`,\n        -`Postal Sector`\n    )\n\n\n\nView Data\n\nglimpse(q1_pte)\n\nRows: 3,567\nColumns: 14\n$ `Project Name`         &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"TERRA HIL…\n$ `Transacted Price ($)` &lt;dbl&gt; 2726888, 3850000, 2190000, 1954000, 3412201, 29…\n$ `Area (SQFT)`          &lt;dbl&gt; 1076.40, 1808.35, 807.30, 796.54, 1323.97, 3530…\n$ `Unit Price ($ PSF)`   &lt;dbl&gt; 2533, 2129, 2713, 2453, 2577, 838, 2007, 1756, …\n$ `Sale Date`            &lt;date&gt; 2024-01-01, 2024-01-01, 2024-01-01, 2024-01-01…\n$ Address                &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN PLACE\",…\n$ `Type of Sale`         &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New Sale\",…\n$ `Property Type`        &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartment\", \"C…\n$ `Number of Units`      &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Tenure                 &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 09/12/20…\n$ `Completion Date`      &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncompleted\", \"U…\n$ `Postal Code`          &lt;chr&gt; \"169878\", \"807233\", \"118992\", \"598444\", \"589605…\n$ `Planning Region`      &lt;chr&gt; \"Central Region\", \"North East Region\", \"Central…\n$ `Planning Area`        &lt;chr&gt; \"Outram\", \"Serangoon\", \"Queenstown\", \"Bukit Tim…\n\n\n\n\n\n\n\n\nNote\n\n\n\nq1_pte contains:\n\nPrivate residential property transaction data from 1st January 2024 to 31st March 2024\nThere are 3567 rows and 14 columns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#visualisation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#visualisation",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Visualisation",
    "text": "Visualisation\n\nPrice Distribution\nCreate box plots for the price distribution of each private residence property type. geom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nNote: For better visibility, labels parameter with the function scales::number, formats the y-axis labels to include thousands separators.\n\nbox_plot &lt;- ggplot(data = q1_pte, \n                   aes(x = `Property Type`, y = `Transacted Price ($)`)) + \n            geom_boxplot() +\n            labs(title = \"Box Plot of Transacted Price ($) by Property Type\",\n                x = \"Property Type\",\n                y = \"Transacted Price ($)\") +\n            scale_y_continuous(labels = scales::number) + \n            theme_gray() + theme(axis.text.x = element_text(angle = 45, hjust = 1,\n                                                            vjust=1))\nbox_plot\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nAccording to the box plot, Detached Houses generally have the highest transacted prices. The Q1, median, and Q3 values for this property type are all substantially higher than those of other types, indicating its premium market status. Detached Houses also exhibit the highest variability in transacted prices, although there are relatively few outliers.\nIn contrast, both Executive Condominiums and Terrace Houses demonstrate the least variability in transacted prices, with their interquartile ranges (IQR) closely aligning with their medians. This suggests a stable and consistent pricing trend for these property types.\nExecutive Condominiums have the lowest transacted prices, indicating their appeal as an affordable option within the private housing market.\nApartments and Condominiums, on the other hand, show a significant number of outliers in their transacted prices, suggesting a wider range of pricing and potentially more diversity in market conditions for these property types.\n\n\n\n\nGroup by Property Type\nThere are various types of Properties for Private residences.\n\nunique(q1_pte$`Property Type`)\n\n[1] \"Condominium\"           \"Terrace House\"         \"Apartment\"            \n[4] \"Executive Condominium\" \"Semi-Detached House\"   \"Detached House\"       \n\n\n\n\n\n\n\n\nNote\n\n\n\nThe different types in the dataset are:\n\nCondominium\nTerrace House\nApartment\nExecutive Condominium\nSemi-Detached House\nDetached House\n\n\n\nTo allow for more in depth analysis of each Property Type, q1_pte tibble data frame is split into a list of smaller tibbles based on “Property Type”.\n\ngroup_by() groups the q1_pte tibble data frame by the “Property Type” column.\ngroup_split() splits the grouped data frame into a list of smaller tibbles based on “Property Type.”\ngroup_keys() retrieves the values of the grouping column (“Property Type”) for each group.\nsetNames() is used to create a named list where each element of the list is one of the smaller tibbles, and each tibble is named according to the corresponding value of the “Property Type” column.\n\n\ngrouped_q1_pte &lt;- q1_pte %&gt;%\n    group_by(`Property Type`)\n\ntibble_list &lt;- group_split(grouped_q1_pte)\nppty_type_name &lt;- group_keys(grouped_q1_pte)$`Property Type`\nppty_type_name &lt;- setNames(tibble_list, ppty_type_name)\n\n\n\nView Data\nThe tabset below allows the view of the newly created smaller Property Type tibble data frames in alphabetical order.\n\nApartmentCondominiumDetached HouseExecutive CondominiumSemi-Detached HouseTerrace House\n\n\n\napart_df &lt;- ppty_type_name[[\"Apartment\"]]\napart_df\n\n# A tibble: 1,425 × 14\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 TERRA HILL                         2190000          807.                 2713\n 2 THE RESERVE RESIDE…                3412201         1324.                 2577\n 3 PARC KOMO                          1758000         1001.                 1756\n 4 SIXTH AVENUE CENTRE                1935000         1173.                 1649\n 5 NOMA                               1500000          850.                 1764\n 6 MAYSPRINGS                          960000          904.                 1062\n 7 PARC ESTA                          2088000         1023.                 2042\n 8 BLOSSOMS BY THE PA…                3364000         1302.                 2583\n 9 THE RESERVE RESIDE…                3350000         1324.                 2530\n10 NORTHVALE                           790000          689.                 1147\n# ℹ 1,415 more rows\n# ℹ 10 more variables: `Sale Date` &lt;date&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;, Tenure &lt;chr&gt;,\n#   `Completion Date` &lt;chr&gt;, `Postal Code` &lt;chr&gt;, `Planning Region` &lt;chr&gt;,\n#   `Planning Area` &lt;chr&gt;\n\n\n\n\n\ncondo_df &lt;- ppty_type_name[[\"Condominium\"]]\ncondo_df\n\n# A tibble: 1,295 × 14\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 THE LANDMARK                       2726888         1076.                 2533\n 2 PINETREE HILL                      1954000          797.                 2453\n 3 ECO                                1620000          990.                 1636\n 4 THE GARDENS AT BIS…                1800000         1206.                 1493\n 5 THOMSON 800                        2800000         1625.                 1723\n 6 SELETAR PARK RESID…                1490000         1507.                  989\n 7 THE ESTUARY                        1540000         1195.                 1289\n 8 THE INTERLACE                      2658000         1615.                 1646\n 9 DUNMAN VIEW                        1800000         1216.                 1480\n10 EUHABITAT                           788000          560.                 1408\n# ℹ 1,285 more rows\n# ℹ 10 more variables: `Sale Date` &lt;date&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;, Tenure &lt;chr&gt;,\n#   `Completion Date` &lt;chr&gt;, `Postal Code` &lt;chr&gt;, `Planning Region` &lt;chr&gt;,\n#   `Planning Area` &lt;chr&gt;\n\n\n\n\n\ndet_df &lt;- ppty_type_name[[\"Detached House\"]]\ndet_df\n\n# A tibble: 39 × 14\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 N.A.                              15000000         8701.                 1724\n 2 FRANKEL ESTATE                     8380000         4514.                 1856\n 3 N.A.                              26500000        12871.                 2059\n 4 N.A.                              13990000         5880.                 2379\n 5 SELETAR HILLS ESTA…                8800000         8302.                 1060\n 6 N.A.                              13400000         6448.                 2078\n 7 KIARA 10                           3618000         5748.                  629\n 8 VERDURE VILLAS                     5400000         5199.                 1039\n 9 DUNEARN ESTATE                    17500000         5013.                 3491\n10 FRANKEL ESTATE                     9500000         5635.                 1686\n# ℹ 29 more rows\n# ℹ 10 more variables: `Sale Date` &lt;date&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;, Tenure &lt;chr&gt;,\n#   `Completion Date` &lt;chr&gt;, `Postal Code` &lt;chr&gt;, `Planning Region` &lt;chr&gt;,\n#   `Planning Area` &lt;chr&gt;\n\n\n\n\n\nec_df &lt;- ppty_type_name[[\"Executive Condominium\"]]\nec_df\n\n# A tibble: 549 × 14\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 TREASURE CREST                     1790000         1249.                 1434\n 2 ESPARINA RESIDENCES                1318800          829.                 1591\n 3 WATERBAY                           1598000         1141.                 1401\n 4 TREASURE CREST                     1562000         1076.                 1451\n 5 BLOSSOM RESIDENCES                 1245000         1055.                 1180\n 6 NORTH GAIA                         1487000         1076.                 1381\n 7 THE CRITERION                      1550000         1249.                 1241\n 8 SOL ACRES                          1170000          850.                 1376\n 9 LA CASA                            1130000         1141.                  990\n10 ESPARINA RESIDENCES                1828000         1163.                 1572\n# ℹ 539 more rows\n# ℹ 10 more variables: `Sale Date` &lt;date&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;, Tenure &lt;chr&gt;,\n#   `Completion Date` &lt;chr&gt;, `Postal Code` &lt;chr&gt;, `Planning Region` &lt;chr&gt;,\n#   `Planning Area` &lt;chr&gt;\n\n\n\n\n\nsemi &lt;- ppty_type_name[[\"Semi-Detached House\"]]\nsemi\n\n# A tibble: 82 × 14\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 ORCHID VILLAGE                    13100000         3667.                 3572\n 2 MAYFLOWER GARDENS                  6980000         4085.                 1709\n 3 HOLLAND GROVE                      3500000         2398.                 1459\n 4 N.A.                               5900000         3996.                 1477\n 5 N.A.                              11500000         6016                  1912\n 6 SENNETT ESTATE                     6000000         4497.                 1334\n 7 CAMELIA PARK                       5300000         4672.                 1135\n 8 SERANGOON GARDEN E…                4700000         2486.                 1890\n 9 N.A.                               5700000         4048.                 1408\n10 FRANKEL ESTATE                     6300000         3828.                 1646\n# ℹ 72 more rows\n# ℹ 10 more variables: `Sale Date` &lt;date&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;, Tenure &lt;chr&gt;,\n#   `Completion Date` &lt;chr&gt;, `Postal Code` &lt;chr&gt;, `Planning Region` &lt;chr&gt;,\n#   `Planning Area` &lt;chr&gt;\n\n\n\n\n\nterra &lt;- ppty_type_name[[\"Terrace House\"]]\nterra\n\n# A tibble: 177 × 14\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 POLLEN COLLECTION                  3850000         1808.                 2129\n 2 SUMMER VILLAS                      2960000         3531.                  838\n 3 SEMBAWANG HILLS ES…                4200000         2093.                 2007\n 4 THE MORRIS RESIDEN…                3530000         4015.                  879\n 5 CABANA                             2750000         3068.                  896\n 6 APOLLO GARDENS                     5100000         4592.                 1111\n 7 N.A.                               2750000         3299.                  834\n 8 POLLEN COLLECTION                  4050000         2153.                 1881\n 9 PICARDY GARDENS                    3940000         2310.                 1706\n10 N.A.                               3950000         2646.                 1493\n# ℹ 167 more rows\n# ℹ 10 more variables: `Sale Date` &lt;date&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;, Tenure &lt;chr&gt;,\n#   `Completion Date` &lt;chr&gt;, `Postal Code` &lt;chr&gt;, `Planning Region` &lt;chr&gt;,\n#   `Planning Area` &lt;chr&gt;\n\n\n\n\n\nGeographical Distribution:\nChoropleth Map: Use a map to visualize property sales and prices across different districts or areas in Singapore. This can reveal hotspots of activity and areas with higher or lower average prices.\nSales Heatmap: Create a heatmap showing the density of property transactions in different areas. This can provide insights into which parts of Singapore are seeing the most activity in the private residential market."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nThe code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#loading-r-packages",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "The code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nBesides tidyverse, the following R packages will be used.\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them into the working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is a pacakge within tidyverse.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data tibble data frame contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Working with ggrepel",
    "text": "Working with ggrepel\nggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text seen below. Simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBenefits of ggplot2 over in-built R graphics\n\nAutomated Legends: Unlike built-in plotting which requires manual legend creation, ggplot2 automatically generates legends based on the data’s aesthetics. This streamlines the process, especially for beginners who may find managing legends challenging.\nSimplified Faceting: ggplot2 simplifies the creation of faceted plots (multiple subplots) compared to base R plotting. The latter can be quite complex, requiring setup with par() and potentially confusing for loops, which might be overwhelming for beginners.\nTidy Data Integration: ggplot2 encourages the use of ‘tidy data’ principles, aligning with how other R tools and packages handle data. This practice helps beginners learn a consistent and widely-adopted approach to data analysis in R."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Working with ggtheme package",
    "text": "Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots made by:\n\nFivethirtyeight\nThe Economist\nThe Wall Street Journal\namong others\n\nThe Economist theme is used below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Working with hrbthems package",
    "text": "Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe second goal centers around productivity for a production workflow, which is the context for where the elements of hrbrthemes should be used.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15\ngrid argument is used to remove the x-axis grid lines"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-1-distribution-of-math-scores-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-1-distribution-of-math-scores-histogram",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Plot 1: Distribution of Math Scores (Histogram)",
    "text": "Plot 1: Distribution of Math Scores (Histogram)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-2-distribution-of-english-scores-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-2-distribution-of-english-scores-histogram",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Plot 2: Distribution of English Scores (Histogram)",
    "text": "Plot 2: Distribution of English Scores (Histogram)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-3-english-vs-maths-score-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plot-3-english-vs-maths-score-scatterplot",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Plot 3: English vs Maths score (Scatterplot)",
    "text": "Plot 3: English vs Maths score (Scatterplot)\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English vs Maths scores for Primary 3\")\n\np3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Creating Composite Graphics: pathwork methods",
    "text": "Creating Composite Graphics: pathwork methods\nggplot2 extension’s functions support composite figures by combining several graphs e.g., grid.arrange() of gridExtra package and plot_grid() of cowplot package.\nThis section uses a ggplot2 extension called patchwork, specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax to create layouts. General syntax:\n\nPlus Sign “+” - Two-Column Layout\nParenthesis “( )” - Create a subplot group.\nDivision Sign “/” - Two-Row Layout"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\nFigure in the tabset below shows a composite of two histograms (p1 & p2 from above) created using patchwork.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote the syntax simplicity. i.e. p1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Combining three ggplot2 graphs",
    "text": "Combining three ggplot2 graphs\nMore complex composites can be achieved by using appropriate operators. For example, the composite figure below uses:\n\n“/” - stack two ggplot2 graphs on top of another\n“|” - place the plots adjacent to each other\n“( )” - define plot sequence\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nRefer to Plot Assembly. for more modification and layout controls"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure with tag",
    "text": "Creating a composite figure with tag\npatchwork also provides auto-tagging capabilities to identify subplots in text, as shown in the figure below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote the I, II, III labels in the subplots have been automatically labelled."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Creating figure with insert",
    "text": "Creating figure with insert\n inset_element() of patchwork, allows the placement of one or several plots or graphic elements freely on top or below another plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2 - Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\npatchwork and theme_economist() of ggthemes package are used to create the figure below\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello, my name is Alicia. Welcome to my Visual Analytics learning journey.\n\n\n\n\nMy motivations for MITB\n\n\n\nChat with me on UniBuddy\n\n\n\nLinkedin"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "Learning Objectives:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R. Otherwise, tidyverse will be installed and launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "A Layered Grammar of Graphics",
    "text": "A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics.\nThere are seven grammars of ggplot2:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\n\n\nCaution\n\n\n\nThe y scale is misleading and not very useful.\n\n\nThe code chunk below does the following:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_histogram()",
    "text": "Geometric Objects: geom_histogram()\nThe code chunk below, uses geom_histogram() create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe default bin is 30"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing geom()",
    "text": "Modifying a geometric object by changing geom()\nThe code chunk below, does the following:\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing aes()",
    "text": "Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom-density()",
    "text": "Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combining-geom-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combining-geom-objects",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Combining geom objects",
    "text": "Combining geom objects\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat()",
    "text": "Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Adding a best fit curve on a scatterplot",
    "text": "Adding a best fit curve on a scatterplot\nThe interpretability of scatterplots can be improved by adding a best fit curve. n the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe default method used is loess.\n\n\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "facet_grid() function",
    "text": "facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\nThe scatterplot below is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1 - A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with theme",
    "text": "Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nThe code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-the-data",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "The code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications homepage. In this website, you will find my coursework.\n\nOverview:\nIntroduction to Visual Analytics\nDesigning Graphics to Enlighten\nInteractivity in Visual Analytics\nFundamentals of Visual Analytics\nDesigning Web-enabled Visual Analytics application with Shiny\nVisual Multivariate Analysis\nVisualising & Analysing Time Oriented Data\nNetwork Data Visualisation & Analysis\nInformation Dashboard Design"
  }
]