[
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "",
    "text": "Statistical graphic methods for visualising distribution using ggplot2 and its extensions for:\n\nRidgeline plot\nRaincloud plot"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#loading-r-packages",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Loading R packages",
    "text": "Loading R packages\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots,\nggdist, a ggplot2 extension spacially desgin for visualising distribution and uncertainty,\ntidyverse, a family of R packages to meet the modern data science and visual communication needs,\nggthemes, a ggplot extension that provides the user additional themes, scales, and geoms for the ggplots package, and\ncolorspace, an R package provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualisations.\n\n\npacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports Exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_df &lt;- read_csv(\"data/Exam_data.csv\")\n\nexam_data contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#varying-fill-colours-along-the-x-axis",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#varying-fill-colours-along-the-x-axis",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Varying Fill Colours along the X-axis",
    "text": "Varying Fill Colours along the X-axis\nSometimes we would like to have the area under a ridgeline not filled with a single solid color but rather with colors that vary in some form along the x axis.\nTo achieve varying fill colours:\n\ngeom_ridgeline_gradient()\ngeom_density_ridges_gradient()\n\nHowever, they do not allow for alpha transparency.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [°C]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English Grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#mapping-probabilities-directly-onto-colour",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#mapping-probabilities-directly-onto-colour",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Mapping Probabilities directly onto colour",
    "text": "Mapping Probabilities directly onto colour\nStat function called stat_density_ridges() replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nInclude the argument calc_ecdf = TRUE in stat_density_ridges()!\n\n\n\nRidgeline Plots with Quantile Lines\nRidgeline plots can be coloured by quantile using geom_density_ridges_gradient(), via the calculated stat(quantile) \n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\nQuantiles can also be specified by cut points e.g. 2.5% and 97.5% tails to colour the ridgeline plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#plotting-a-half-eye-graph",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#plotting-a-half-eye-graph",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Plotting a Half Eye graph",
    "text": "Plotting a Half Eye graph\nPlot a Half-Eye graph by using stat_halfeye() of ggdist package, producing a Half Eye visualization, which is contains a half-density and a slab-interval.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nRemove the slab interval by setting .width = 0 and point_colour = NA."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#adding-the-boxplot",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#adding-the-boxplot",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Adding the boxplot",
    "text": "Adding the boxplot\nThe second geometry layer i.e. a narrow boxplot is produced using geom_boxplot() of ggplot2 This produces a narrow boxplot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#adding-the-dot-plots",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#adding-the-dot-plots",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Adding the Dot Plots",
    "text": "Adding the Dot Plots\nThe third geometry layer is added using stat_dots() of ggdist package. This produces a half-dotplot, similar to a histogram that indicates the number of samples (number of dots) in each bin. Use side = “left” to specify the dot plots on the left-hand side.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#finishing-touch",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#finishing-touch",
    "title": "In-Class Exercise 2 - Visualising Distribution",
    "section": "Finishing touch",
    "text": "Finishing touch\n coord_flip() of ggplot2 package is used to flip the raincloud chart horizontally to give it the raincloud appearance. theme_economist() of ggthemes package is also used to give the raincloud chart a professional publishing standard look.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#downloading-the-dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#downloading-the-dataset",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Downloading the Dataset",
    "text": "Downloading the Dataset\n\nAccess Dataset via SMU e-library\n\nAfter logging in with SMU credentials, navigate to “Residential” tab\n\nUnder Property Types, “Select All”\nUnder Sale Date, select “2024 Jan” - “2024 Mar”\nClick “Search”\nClick “Download”\nDue to the size of the dataset, it is split into multiple segments. Download all in .csv format"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-designing-tool",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-designing-tool",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "The Designing Tool",
    "text": "The Designing Tool\nThe data will be processed using the appropriate tidyverse family of packages and the statistical graphics will be prepared using ggplot2 and its extensions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-and-loading-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-and-loading-the-required-libraries",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below loads the following packages using uses p_load() of pacman package:\n\ntidyverse: (i.e. readr, tidyr, dplyr, ggplot2, lubridate) for performing data science tasks such as importing, tidying, and wrangling data, as well as creating graphics based on The Grammar of Graphics\nreshape2 for transforming data between wide and long formats\nggthemes: provides some extra themes, geoms, and scales for ‘ggplot2’.\nggdist: a ggplot2 extension specially designed for visualising distribution and uncertainty\n\n\npacman::p_load(tidyverse, reshape2, ggthemes, ggdist)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-data",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe data has been split into multiple .csv files\nlist.files() list all CSV files in the specified directory.\nAfter looping through each CSV file, read it into a data frame using read_csv(), and store it in a list.\nbind_rows() combines all data frames in the list into a single big data frame.\n\n\ncsv_directory &lt;- \"data/\"\ncsv_files &lt;- list.files(csv_directory, pattern = \"\\\\.csv$\", full.names = TRUE)\n\nrealis &lt;- list()\n\nfor (file in csv_files) {\n  realis[[file]] &lt;- read_csv(file)\n}\n\n\nrealis_all &lt;- bind_rows(realis)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#view-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#view-data",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "View Data",
    "text": "View Data\n\nnames() function prints the names of the columns in the tibble data frame.\nglimpse() function gives a quick overview of the tibble data frame\n\n\nColumn NamesOverview of Tibble Data Frame\n\n\n\ncol_names &lt;- names(realis_all)\ncol_names\n\n [1] \"Project Name\"                \"Transacted Price ($)\"       \n [3] \"Area (SQFT)\"                 \"Unit Price ($ PSF)\"         \n [5] \"Sale Date\"                   \"Address\"                    \n [7] \"Type of Sale\"                \"Type of Area\"               \n [9] \"Area (SQM)\"                  \"Unit Price ($ PSM)\"         \n[11] \"Nett Price($)\"               \"Property Type\"              \n[13] \"Number of Units\"             \"Tenure\"                     \n[15] \"Completion Date\"             \"Purchaser Address Indicator\"\n[17] \"Postal Code\"                 \"Postal District\"            \n[19] \"Postal Sector\"               \"Planning Region\"            \n[21] \"Planning Area\"              \n\n\n\n\n\nglimpse(realis_all)\n\nRows: 26,806\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nrealis_all contains:\n\nPublic and Private residential property transaction data from 1st January 2023 to 31st March 2024.\nThere are 26,806 rows and 21 columns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nStandardise Date Format\nThe “Sales Date” column is currently a cha type. It needs to be converted into date format.\ndmy() is a function from the lubridate package that converts character strings to date format in the day-month-year (DMY) order.\n\nStandardise Date FormatView Data\n\n\n\nrealis_all$`Sale Date` &lt;- dmy(realis_all$`Sale Date`)\n\n\n\n\nhead(realis_all$`Sale Date`)\n\n[1] \"2023-01-01\" \"2023-01-02\" \"2023-01-02\" \"2023-01-02\" \"2023-01-03\"\n[6] \"2023-01-03\"\n\n\n\n\n\n\n\nKeep Relevant Rows\nDuplicate and empty rows are removed.\n\nqa_pte_raw &lt;- realis_all %&gt;%\n    distinct() %&gt;%\n    drop_na()\n\n\nView Data\n\nglimpse(qa_pte_raw)\n\nRows: 26,800\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;date&gt; 2023-01-01, 2023-01-02, 2023-01-02, 202…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\n\n\n\nNote\n\n\n\nqa_pte_raw contains:\n\nPrivate residential property transaction data from 1st January 2023 to 31st March 2024\nThere are 26,800 rows and 21 columns.\n\n\n\n\n\n\nKeep Relevant Columns\nNot all 21 columns will be used for analysis e.g. contains overlapping information as another column. Only relevant columns will be kept.\nColumns to drop:\n\nArea (SQFT): Similar information as Area (SQM)\nUnit Price ($ PSF): Similar information as Unit Price ($ PSM)\nNett Price ($): Similar information as Transacted Price ($)\nPostal District and Postal Sector: Overlapping information as Postal Code\n\nColumns to be dropped can be specified by prefixing the column names with a minus sign (-) when using the select() function from the dplyr package.\n\nKeep Relevant ColumnsView Data\n\n\n\nqa_pte &lt;- qa_pte_raw %&gt;%\n    select(\n        -`Area (SQFT)`,\n        -`Unit Price ($ PSF)`,\n        -`Postal District`,\n        -`Postal Sector`\n    )\n\n\n\n\nglimpse(qa_pte)\n\nRows: 26,800\nColumns: 17\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Sale Date`                   &lt;date&gt; 2023-01-01, 2023-01-02, 2023-01-02, 202…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nqa_pte contains:\n\nPrivate residential property transaction data from 1st January 2024 to 31st March 2024\nThere are 26,800 rows and 14 columns.\nColumns:\n\nProject Name\nTransacted Price ($)\nSale Date\nAddress\nType of Sale\nType of Area\nArea (SQM)\nUnit Price ($ PSM)\nNett Price\nProperty Type\nNumber of Units\nTensure\nCompletion Date\nPurchaser Address Indicator\nPostal Code\nPlanning Region\nPlanning Area\n\n\n\n\n\n\nSeparate Data by Quarters\nThe dataset contains 5 quarters:\n\nQuarter 1: 2023 Jan - Mar\nQuarter 2: 2023 Apr - Jun\nQuarter 3: 2023 Jul - Sep\nQuarter 4: 2023 Aug - Dec\nQuarter 5: 2024 Jan - Mar\n\nTo allow for comparison between quarters, qa_pte will be split into the respective quarters by Sale Date.\n\nq1 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &lt;= \"2023-03-31\")\n\nq2 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &gt; \"2023-03-31\" & `Sale Date` &lt;= \"2023-06-30\")\n\nq3 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &gt; \"2023-06-30\" & `Sale Date` &lt;= \"2023-09-30\")\n\nq4 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &gt; \"2023-09-30\" & `Sale Date` &lt;= \"2023-12-31\")\n\nq5 &lt;- qa_pte %&gt;%\n  filter(`Sale Date` &gt; \"2023-12-31\")\n\n\n\nView Data\n\nQ1Q2Q3Q4Q5\n\n\n\nglimpse(q1)\n\nRows: 4,722\nColumns: 17\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Sale Date`                   &lt;date&gt; 2023-01-01, 2023-01-02, 2023-01-02, 202…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\nsummary(q2)\n\n Project Name       Transacted Price ($)   Sale Date         \n Length:6125        Min.   :  520000     Min.   :2023-04-01  \n Class :character   1st Qu.: 1268000     1st Qu.:2023-04-24  \n Mode  :character   Median : 1688000     Median :2023-05-13  \n                    Mean   : 2116310     Mean   :2023-05-13  \n                    3rd Qu.: 2350000     3rd Qu.:2023-05-31  \n                    Max.   :66800000     Max.   :2023-06-30  \n   Address          Type of Sale       Type of Area         Area (SQM)    \n Length:6125        Length:6125        Length:6125        Min.   :  30.0  \n Class :character   Class :character   Class :character   1st Qu.:  63.0  \n Mode  :character   Mode  :character   Mode  :character   Median :  89.0  \n                                                          Mean   : 106.7  \n                                                          3rd Qu.: 119.0  \n                                                          Max.   :2339.0  \n Unit Price ($ PSM) Nett Price($)      Property Type      Number of Units \n Min.   : 3364      Length:6125        Length:6125        Min.   : 1.000  \n 1st Qu.:14838      Class :character   Class :character   1st Qu.: 1.000  \n Median :19787      Mode  :character   Mode  :character   Median : 1.000  \n Mean   :20665                                            Mean   : 1.002  \n 3rd Qu.:26390                                            3rd Qu.: 1.000  \n Max.   :57053                                            Max.   :11.000  \n    Tenure          Completion Date    Purchaser Address Indicator\n Length:6125        Length:6125        Length:6125                \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal Code        Planning Region    Planning Area     \n Length:6125        Length:6125        Length:6125       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n\n\n\n\n\nsummary(q3)\n\n Project Name       Transacted Price ($)   Sale Date         \n Length:6200        Min.   :  440000     Min.   :2023-07-01  \n Class :character   1st Qu.: 1280000     1st Qu.:2023-07-15  \n Mode  :character   Median : 1642500     Median :2023-08-05  \n                    Mean   : 2017893     Mean   :2023-08-09  \n                    3rd Qu.: 2255250     3rd Qu.:2023-08-31  \n                    Max.   :32000000     Max.   :2023-09-30  \n   Address          Type of Sale       Type of Area         Area (SQM)   \n Length:6200        Length:6200        Length:6200        Min.   : 30.0  \n Class :character   Class :character   Class :character   1st Qu.: 67.0  \n Mode  :character   Mode  :character   Mode  :character   Median : 91.0  \n                                                          Mean   :105.7  \n                                                          3rd Qu.:119.0  \n                                                          Max.   :995.0  \n Unit Price ($ PSM) Nett Price($)      Property Type      Number of Units\n Min.   : 2158      Length:6200        Length:6200        Min.   :1      \n 1st Qu.:15071      Class :character   Class :character   1st Qu.:1      \n Median :19048      Mode  :character   Mode  :character   Median :1      \n Mean   :19857                                            Mean   :1      \n 3rd Qu.:24048                                            3rd Qu.:1      \n Max.   :59949                                            Max.   :2      \n    Tenure          Completion Date    Purchaser Address Indicator\n Length:6200        Length:6200        Length:6200                \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal Code        Planning Region    Planning Area     \n Length:6200        Length:6200        Length:6200       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n\n\n\n\n\nsummary(q4)\n\n Project Name       Transacted Price ($)   Sale Date         \n Length:4851        Min.   :  570000     Min.   :2023-10-01  \n Class :character   1st Qu.: 1285000     1st Qu.:2023-10-25  \n Mode  :character   Median : 1649340     Median :2023-11-11  \n                    Mean   : 2147366     Mean   :2023-11-13  \n                    3rd Qu.: 2370000     3rd Qu.:2023-12-04  \n                    Max.   :33888000     Max.   :2023-12-31  \n   Address          Type of Sale       Type of Area         Area (SQM)    \n Length:4851        Length:4851        Length:4851        Min.   :  30.0  \n Class :character   Class :character   Class :character   1st Qu.:  67.0  \n Mode  :character   Mode  :character   Mode  :character   Median :  96.0  \n                                                          Mean   : 110.7  \n                                                          3rd Qu.: 122.0  \n                                                          Max.   :1423.1  \n Unit Price ($ PSM) Nett Price($)      Property Type      Number of Units\n Min.   : 1484      Length:4851        Length:4851        Min.   :1.000  \n 1st Qu.:14900      Class :character   Class :character   1st Qu.:1.000  \n Median :18846      Mode  :character   Mode  :character   Median :1.000  \n Mean   :19682                                            Mean   :1.001  \n 3rd Qu.:23492                                            3rd Qu.:1.000  \n Max.   :47026                                            Max.   :7.000  \n    Tenure          Completion Date    Purchaser Address Indicator\n Length:4851        Length:4851        Length:4851                \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal Code        Planning Region    Planning Area     \n Length:4851        Length:4851        Length:4851       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n\n\n\n\n\nsummary(q5)\n\n Project Name       Transacted Price ($)   Sale Date         \n Length:4902        Min.   :  555000     Min.   :2024-01-01  \n Class :character   1st Qu.: 1330000     1st Qu.:2024-01-26  \n Mode  :character   Median : 1688000     Median :2024-02-17  \n                    Mean   : 2100902     Mean   :2024-02-16  \n                    3rd Qu.: 2300000     3rd Qu.:2024-03-14  \n                    Max.   :39500000     Max.   :2024-03-31  \n   Address          Type of Sale       Type of Area         Area (SQM)    \n Length:4902        Length:4902        Length:4902        Min.   :  30.0  \n Class :character   Class :character   Class :character   1st Qu.:  71.0  \n Mode  :character   Mode  :character   Mode  :character   Median :  94.0  \n                                                          Mean   : 111.5  \n                                                          3rd Qu.: 120.7  \n                                                          Max.   :1816.6  \n Unit Price ($ PSM) Nett Price($)      Property Type      Number of Units\n Min.   : 6183      Length:4902        Length:4902        Min.   :1      \n 1st Qu.:15237      Class :character   Class :character   1st Qu.:1      \n Median :18688      Mode  :character   Mode  :character   Median :1      \n Mean   :19502                                            Mean   :1      \n 3rd Qu.:23548                                            3rd Qu.:1      \n Max.   :58099                                            Max.   :2      \n    Tenure          Completion Date    Purchaser Address Indicator\n Length:4902        Length:4902        Length:4902                \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal Code        Planning Region    Planning Area     \n Length:4902        Length:4902        Length:4902       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#price-distribution---raincloud-plot",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#price-distribution---raincloud-plot",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Price Distribution - Raincloud Plot",
    "text": "Price Distribution - Raincloud Plot\nA raincloud plot produces a half-density to a distribution plot. It got its name due to the likeness of its density plot to a shape of a “raincloud”. The raincloud (half-density) plot enhances the traditional box-plot by highlighting multiple modalities. The raincloud plot shows where densities are clustered.\nFor better visibility, labels parameter with the function scales::number, formats the y-axis labels to include thousands separators.\nThe code chunk below plots the price distribution by property type for each quarter and overall.\n\nAll Quarters2023 Q12023 Q22023 Q32023 Q42024 Q1\n\n\n\nggplot(qa_pte, \n       aes(x = `Property Type`, \n           y = `Unit Price ($ PSM)`)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  scale_y_continuous(labels = scales::number_format()) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\nggplot(q1, \n       aes(x = `Property Type`, \n           y = `Unit Price ($ PSM)`)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  scale_y_continuous(labels = scales::number_format()) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\nggplot(q2, \n       aes(x = `Property Type`, \n           y = `Unit Price ($ PSM)`)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  scale_y_continuous(labels = scales::number_format()) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\nggplot(q3, \n       aes(x = `Property Type`, \n           y = `Unit Price ($ PSM)`)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  scale_y_continuous(labels = scales::number_format()) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\nggplot(q4, \n       aes(x = `Property Type`, \n           y = `Unit Price ($ PSM)`)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  scale_y_continuous(labels = scales::number_format()) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\nggplot(q5, \n       aes(x = `Property Type`, \n           y = `Unit Price ($ PSM)`)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  scale_y_continuous(labels = scales::number_format()) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\nWrite Up\n\n\n\nThere are six private property types in the dataset.\nThe boxplot shows Detached Houses generally have the highest transacted prices. The Q1, median, and Q3 values for this property type are all substantially higher than those of other types, indicating its premium market status. Detached Houses also exhibit the highest variability in transacted prices, although there are relatively few outliers.\nIn contrast, both Executive Condominiums and Terrace Houses demonstrate the least variability in transacted prices, with their interquartile ranges (IQR) closely aligning with their medians. This suggests a stable and consistent pricing trend for these property types.\nExecutive Condominiums have the lowest transacted prices, indicating their appeal as an affordable option within the private housing market.\nApartments and Condominiums, on the other hand, show a significant number of outliers in their transacted prices, suggesting a wider range of pricing and potentially more diversity in market conditions for these property types."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#geographical-distribution---choropleth-map",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#geographical-distribution---choropleth-map",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Geographical Distribution - Choropleth Map",
    "text": "Geographical Distribution - Choropleth Map\n\n\n\n\n\n\nNote\n\n\n\nThis section covers geographical distribution, instead of statistical graphics for frequency distribution and value distribution. Thus, below is FYI for for this submission only.\n\n\nA choropleth map is useful for visualizing the variation in average property prices across different areas in Singapore. By shading each region according to its average property price, areas with higher or lower prices can be identified, thus revealing patterns and trends in property values across the city-state. This type of map can reveal hotspots of activity and areas with more affordable or expensive property options.\nTwo data sets will be used to create the map. They are:\n\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019. It can be downloaded at data.gov.sg It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2019.\nPrivate residential property transaction data from 1st January 2024 to 31st March 2024 in tibble data frame (i.e. q5).\n\nThe code chunk below loads the following packages:\n\ntmap: for thematic mapping\nsf: for geospatial data handling\nhttr: Make HTTP requests and handles web APIs\nfuture: Allows sequential and parallel processing\nfurrr: combine purrr’s family of mapping functions (within tidyverse) with future’s parallel processing capabilities\n\n\npacman::p_load(tmap,sf,httr, future, furrr)\n\n\nGeospatial Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeocoding using Singapore Land Authority (SLA) API\nGeocoding - provide geographical coordinates corresponding to a location.\nParallel processing is set up to speed up the process. Results are saved into a .csv file for easy future access.\n\nplan(multisession)\n\nurl &lt;- \"https://www.onemap.gov.sg/api/common/elastic/search\"\n\npostcodes &lt;- unique(q5$`Postal Code`)\n\n# Function to fetch data for a single postal code\nfetch_postcode_data &lt;- function(postcode) {\n    query &lt;- list('searchVal' = postcode, 'returnGeom' = 'Y', 'getAddrDetails' = 'Y', 'pageNum' = '1')\n    res &lt;- GET(url, query = query)\n    \n    if (http_error(res)) {\n        return(NULL) \n    }\n    \n    content_res &lt;- content(res)\n    if (content_res$found != 0) {\n        return(data.frame(content_res)[4:13])\n    } else {\n        return(data.frame(postcode = postcode))\n    }\n}\n\nresults &lt;- future_map(postcodes, fetch_postcode_data)\n\nfound &lt;- bind_rows(results, .id = \"postcode\")\n\nfound &lt;- found %&gt;%\n    filter(!is.na(postcode))\n\nwrite.csv(found, file = \"data/aspatial/found.csv\")\n\n\n\n\n\n\n\nNote\n\n\n\nAbove code chunk was written with syntax for httr, which has been superseded by httr2. Please make relevant modifications to utilise the newer package.\n\n\n\n\nImport Geospatial Data\nThe code chunk below uses the st_read() function of sf package to import MPSZ-2019 shapefile into R as a simple feature data frame called mpsz.\n\nCodeContent\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\n\n\n\n\nReading layer `MPSZ-2019' from data source \n  `C:\\lnealicia\\ISSS608\\Take-home_Ex\\Take-home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\nAdd coordinates\nLink postal code to their relevant coordinates. Empty rows are removed. Not all postal codes may have relevant sales during Q1 of 2024.\n\nq5_coor &lt;- q5 %&gt;%\n    left_join(\n        found %&gt;% select(results.POSTAL, results.LATITUDE, results.LONGITUDE),\n        by = c(\"Postal Code\" = \"results.POSTAL\")\n    ) %&gt;%\n    rename(\n        Latitude = results.LATITUDE,\n        Longitude = results.LONGITUDE\n    ) %&gt;%\n   filter(!is.na(Longitude) & !is.na(Latitude))\n\n\n\nConvert to a sf tibble data frame\n\nq5_sf &lt;- st_as_sf(q5_coor,\n                       coords = c(\"Longitude\", \"Latitude\"),\n                       crs =4326) %&gt;%\n  st_transform(crs = 3414)\n\n\n\nKeep relevant columns\n\nq5_sf_plot &lt;- q5_sf %&gt;%\n    select(-`Project Name`,\n           -`Sale Date`,\n           -`Address`,\n           -`Type of Sale`,\n           -`Tenure`,\n           -`Completion Date`)\n\n\n\nAverage Transacted Price by Planning Area\n\navg_txn_px &lt;- q5_sf_plot %&gt;%\n    group_by(`Planning Area`) %&gt;%\n    summarize(\n        Avg_Transacted_Price = mean(`Transacted Price ($)`, na.rm = TRUE)\n    )\n\navg_txn_px &lt;- avg_txn_px %&gt;%\n    mutate(`Planning Area` = toupper(`Planning Area`))\n\navg_txn_px &lt;- st_drop_geometry(avg_txn_px)\n\n\n\nCombine avg_txn_px and mpsz\nPopulates the average transacted price of each planning area into mpsz sf data frame. Not every planning area may have transaction data, so empty rows are dropped.\n\nmpsz_avg_txn_px &lt;- mpsz %&gt;%\n    left_join(\n        avg_txn_px,\n        by = c(\"PLN_AREA_N\" = \"Planning Area\")\n    ) %&gt;%\n  drop_na()\n\n\n\nPlotting Choropleth Map and Geographical Distribution of Private Properties\nThe overall plot shows both the average transacted price of the planning area and the distribution of private residences. If viewing the data separately is preferred, click on the relevant tabs.\n\nOverall PlotAverage Transacted PriceGeographic Distribution of Private Property\n\n\n\ntmap_mode(\"view\")\n\nmap &lt;- tm_shape(mpsz_avg_txn_px) +\n    tm_polygons(col = \"Avg_Transacted_Price\", \n                palette = \"YlOrRd\", \n                alpha = 0.3,\n                style = \"quantile\",\n                n = 7) +\n    tmap_options(check.and.fix = TRUE) +\n    \n    tm_shape(q5_sf_plot) +\n    tm_dots(col = \"Property Type\") +\n\n  tm_view(set.zoom.limits = c(11,14))\n\nmap\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\n\n\ntmap_mode(\"view\")\n\nmap2 &lt;- tm_shape(mpsz_avg_txn_px) +\n    tm_polygons(col = \"Avg_Transacted_Price\", \n                palette = \"YlOrRd\", \n                alpha = 0.3,\n                style = \"quantile\",\n                n = 7) +\n    tmap_options(check.and.fix = TRUE) +\n  tm_view(set.zoom.limits = c(11,14))\n\nmap2\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\n\n\ntmap_mode(\"view\")\n\nmap3 &lt;- tm_shape(mpsz_avg_txn_px) +\n    tm_polygons() +\n    tm_shape(q5_sf_plot) +\n    tm_dots(col = \"Property Type\") +\n\n  tm_view(set.zoom.limits = c(11,14))\n\nmap3\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ntmap_mode(“view”):\n\nDesigned for interactive viewing of spatial data.\nEnables zooming, panning, and other interactive features, making it easier to explore the data in detail.\n\ntmap_mode(“plot”):\n\nUsed for static plotting of spatial data that can be saved as static images e.g., PNG\nDoes not support interactions like zooming and panning.\n\nSetting the mode to plot after the map is generated saves on resources and allows the code to run faster, as the plot does not require continuous updating.\n\n\n\n\n\n\n\n\nWrite Up\n\n\n\nThe plots reveal that of the private properties sold, areas with the highest average transaction price are concentrated around the Central Region, including areas like Bukit Timah and Newton. This is likely due to their proximity to the Central Business District (CBD). Although there are very few transactions in Sentosa and Changi, these areas still have high average transaction prices, mainly consisting of condominiums.\nSales of Executive Condominiums, which were previously noted to have the lowest overall transaction price and low transaction price variability, are predominantly located in the outskirts of Singapore, such as Woodlands and Bukit Batok. This suggests a trend toward more affordable options in these areas.\nApartments and condominiums constitute the majority of private residences sold and are distributed throughout the city-state. This extensive distribution may account for the significant number of outliers observed earlier in transaction prices."
  }
]