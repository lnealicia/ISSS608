[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello, my name is Alicia. Welcome to my Visual Analytics learning journey.\n\n\n\n\nMy motivations for MITB\n\n\n\nChat with me on UniBuddy\n\n\n\nLinkedin"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#context",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#context",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Context",
    "text": "Context\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S$14,000. For families with monthly household income more than S$14,000, they need to turn to the private residential market."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-task",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "The Task",
    "text": "The Task\nAssuming the role of a graphical editor of a median company, a minimum two and maximum three of data visualisations are to be prepared to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-data",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "The Data",
    "text": "The Data\n\nTo accomplish the task, transaction data of REALIS will be used. A complete set of the private residential property transaction data from 1st January 2023 to 31st March 2024 is used.\n\nDownloading the Dataset\n\nAccess Dataset via SMU e-library\n\nAfter logging in with SMU credentials, navigate to “Residential” tab\n\nUnder Property Types, “Select All”\nUnder Sale Date, select “2023 Jan” - “2024 Mar”\nClick “Search”\nClick “Download”\nDue to the size of the dataset, it is split into multiple segments. Download all in .csv format"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-designing-tool",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#the-designing-tool",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "The Designing Tool",
    "text": "The Designing Tool\nThe data will be processed using the appropriate tidyverse family of packages and the statistical graphics will be prepared using ggplot2 and its extensions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#installing-and-loading-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#installing-and-loading-the-required-libraries",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nNote: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to check if the listed packages are installed in the computer. If they are, then they will be launched into R. Otherwise, tidyverse will be installed and launched into R.\n\ntidyverse (i.e. readr, tidyr, dplyr, ggplot2) for performing data science tasks such as importing, tidying, and wrangling data, as well as creating graphics based on The Grammar of Graphics\nreshape2 for transforming data between wide and long formats\nggthemr for aesthetic themes created by user, Ciarán Tobin\nggridges for creating ridgeline plots\nggdist for visualising distributions and uncertainty\nggpubr for creating publication ready ggplot2 plots\n\n\npacman::p_load(tidyverse, reshape2, ggthemr, ggridges, ggdist, ggpubr)\n\npackage 'ggpubr' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\NLOH0\\AppData\\Local\\Temp\\RtmpMzeFvS\\downloaded_packages"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#importing-the-data",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports all .csv files from data folder into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nres_txn &lt;- read_csv(\"data/\")\n\nres_txn contains:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#a-layered-grammar-of-graphics",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#a-layered-grammar-of-graphics",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "A Layered Grammar of Graphics",
    "text": "A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics.\nThere are seven grammars of ggplot2:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_bar",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_bar",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_dotplot",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_dotplot",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\nCaution\n\n\n\nThe y scale is misleading and not very useful.\n\n\nThe code chunk below does the following:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_histogram",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_histogram",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Geometric Objects: geom_histogram()",
    "text": "Geometric Objects: geom_histogram()\nThe code chunk below, uses geom_histogram() create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\n\n\n\nNote\n\n\n\nThe default bin is 30"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Modifying a geometric object by changing geom()",
    "text": "Modifying a geometric object by changing geom()\nThe code chunk below, does the following:\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Modifying a geometric object by changing aes()",
    "text": "Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom-density",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom-density",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Geometric Objects: geom-density()",
    "text": "Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_boxplot",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_boxplot",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_violin",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_violin",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_point",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#geometric-objects-geom_point",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#combining-geom-objects",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#combining-geom-objects",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Combining geom objects",
    "text": "Combining geom objects\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-stat",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-stat",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Working with stat()",
    "text": "Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-stat---the-stat_summary-method",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-stat---the-stat_summary-method",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-stat---the-geom-method",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-stat---the-geom-method",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Adding a best fit curve on a scatterplot",
    "text": "Adding a best fit curve on a scatterplot\nThe interpretability of scatterplots can be improved by adding a best fit curve. n the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\nNote\n\n\n\nThe default method used is loess.\n\n\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-facet_wrap",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-facet_wrap",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#facet_grid-function",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#facet_grid-function",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "facet_grid() function",
    "text": "facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-coordinate",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-coordinate",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#changing-the-y--and-x-axis-range",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#changing-the-y--and-x-axis-range",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\nThe scatterplot below is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-theme",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_1.html#working-with-theme",
    "title": "Take-home Exercise 1 Part I - Creating Data Visualisation Beyond Default",
    "section": "Working with theme",
    "text": "Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nThe code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-the-data",
    "title": "In-Class Exercise 1",
    "section": "",
    "text": "The code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nThe code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#loading-r-packages",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe code chunk below uses p_load() of pacman package to load the tidyverse family of packages.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "href": "In-class_Ex/In-class_Ex02/In-Class_Ex02.html#importing-the-data",
    "title": "In-Class Exercise 2",
    "section": "",
    "text": "The code chunk below imports realis2019.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  }
]